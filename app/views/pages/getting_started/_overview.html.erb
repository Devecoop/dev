<h2 id="overview-overview">Overview</h2>

<p>
Lelylan breaks up the Internet of Things complexities by providing a highly elastic and highly scalable way to build, deploy and manage modern iot applications based on microservices. Based on a clear API, a complete test suite, and a secure communication (HTTP, MQTT), every service is dedicated to one task (e.g. mqtt, device api, webhooks) creating an easier to maintain code and reducing the time to market by ~30%.
</p>

<p>
Lelylan is licensed under the <a href="http://www.apache.org/licenses/LICENSE-2.0">Apache License, Version 2.0</a> (free from any commercial license).
</p>

<hr>


<h2 id="overview-architecture">Architecture</h2>

<p>
  Microservices architecture is not a new style of building large scale enterprise applications. Companies like Netflix and Amazon have implemented microservices architecture to deliver successful products over the last few years. Lelylan brings these ideas into the Internet of Things.
</p>

<%= image_tag('microservices-3-col.png', class: 'img-thumbnail') %>

<hr>


<h2 id="overview-installation">Installation</h2>

<p>
Lelylan provides many blocks you need to run an connected product at scale in production. You can run on premise, in a cloud environment, or in a hybrid environment using both cloud and on premise infrastructure (we are studying solutions like Docker, Mesos, and Ansible to simplify the installation process).
</p>

<%= image_tag('cloud-purple.png', class: 'img-thumbnail') %>

<hr>


<h2 id="overview-tutorials">Tutorials</h2>

<p>
Get confident with Lelylan by creating a connected light using the hardware platforms you are most familiar with (e.g. Arduino, Raspberry, Electric Imp, CC3000) or by creating your first application for the Internet of Things. You can get started in 15 minutes (find more on <a href="http://lelylan.github.io/lab-ng/#/projects">Lelylan Labs</a>).
</p>

<br><br>

<div>
  <div class="project">
    <ly-project ly-project-id="56a9fd353734640017000000"></ly-project>
  </div>
  <div class="project">
    <ly-project ly-project-id="547d9f7f316135000e030000"></ly-project>
  </div>
  <div class="project">
    <ly-project ly-project-id="5457a193386166008d000000"></ly-project>
  </div>
  <div class="project">
    <ly-project ly-project-id="547d9104316135000e000000"></ly-project>
  </div>
  
  <link rel="stylesheet" href="http://lelylan.github.io/lab-directives-ng/styles/main.css">
  <script src="http://lelylan.github.io/lab-directives-ng/scripts/vendor.js"></script>
  <script src="http://lelylan.github.io/lab-directives-ng/scripts/scripts.js"></script>
  <script>angular.module('project-app', ['lelylan-lab.directives.project']);</script>
</div>

<br style="clear:both">

<hr>


<h2 id="overview-core">Core concepts</h2>

<p>
<a href="">Type</a>. A Type describes the structure of a device. In its simplest form every Type is defined
as the combination of three key elements: properties (what vary during time), functions (what a device can do) and statuses (what a device is in a specific time of its life).
</p>

<p>
  <a href="">Device</a>. A Device represents everything you interact with everyday of your life like sensors, lights, thermostats, locks, cameras, multimedia, bikes, cars and much, much more. The Device API lets you create, monitor and control any those objects you interact with.
</p>

<p>
<a href="">Physical</a>. Whereas Devices are a virtual representation, Physicals are the real objects you interact with. To enable the communication between Lelylan and the physical world, the physical device must be able to connect to the Internet and to implement the Physical API.
<p>
