<article>

<aside class="menu">
</br>
<table>
  <tbody>
    <tr><td><a href="" class="upcase"><%= title %></a></td></tr>
    <tr><td>&raquo; <a href="#get-a-device">Get a device</a></td></tr>
    <tr><td>&raquo; <a href="#get-a-device-private-info">Get a device private info</a></td></tr>
    <tr><td>&raquo; <a href="#get-all-devices">Get all devices</a></td></tr>
    <tr><td>&raquo; <a href="#create-a-device">Create a device</a></td></tr>
    <tr><td>&raquo; <a href="#update-a-device">Update a device</a></td></tr>
    <tr><td>&raquo; <a href="#delete-a-device">Delete a device</a></td></tr>
    <tr><td>&raquo; <a href="#update-properties">Update properties</a></td></tr>
    <tr><td>&raquo; <a href="#execute-a-function">Execute a function</a></td></tr>
  </tbody>
</table>
</aside>

<h1 class="call"><a name="devices"><%= title %></a></h1>

<p>
A device is everything you interact with everyday of your life. You interact with
lights, appliances, alarms, cooling and heating systems, smoke and gas sensors,
rolling shutters and windows, irrigations, video surveillance, gates, multimedia
(audio and video) and much more.
</p>

<p>
The Devices API defines a set of services to monitor and control any device with the
final goal of mapping every device to a unique URI which provides control over it.
</p>

<p>
Simplifying, a device is characterized by a <a href="/api/types/">type</a> and the
<a href="/api/types/properties/">properties</a> it inherits from. For example, when
creating a basic light, the device inherits the <em>status</em>
(<code>on</code> or <code>off</code>) property from it.
</p>

</article>

<article>

<h2 class="call"><a name="start">Getting Started</a></h2>

<p>
  The simplest way to get started with the Devices API is to use <a href="http://d.lelylan.com">Lelylan Dashboard</a>.
  It gives you everything you need to create, monitor, connect and simulate any device.
</p>

<a href="http://d.lelylan.com">
<%= image_tag('devices-dashboard-ng.png', class: 'img-polaroid') %>
</a>


<p>
  Lelylan Dashboard is available on <a href="https://github.com/lelylan/devices-dashboard-ng/">Github</a>.
</p>

</article>

<br><br>

<article>

<h1 class="call"><a name="get-a-device">GET /devices/:id</a></h1>

<p>Returns extended information for a given device identified from its ID.</p>

<h4>Resource URL</h4>
<div class="preview">
  <pre><code>GET http://api.lelylan.com/devices/:id</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>id</span>
        <span class="info">required</span>
      </td>
      <td>
        The ID of the desired device.
      </td>
    </tr>
  </tbody>
</table>

<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#get-a-device-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#get-a-device-node" data-toggle="tab" class="node">Node.js</a></li>
  <li><a href="#get-a-device-angular" data-toggle="tab" class="angular">AngularJS</a></li>
  <li><a href="#get-a-device-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="get-a-device-curl">
    <div class="preview">
      <pre><xmp>curl http://api.lelylan.com/devices/<id> \
     -H 'Authorization: Bearer <token>'</xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-a-device-node">
    <div class="preview">
      <pre class="prettyprint"><xmp>var Lelylan = require('lelylan-node')({ token: token });
Lelylan.Device.find('<id>', callback);</xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-a-device-angular">
    <div class="preview">
      <pre class="prettyprint"><xmp><html ng-app="lelylan">
<body>
  <!-- login component here (dev.lelylan.com/api/oauth#implicit-grant-angular) -->
  <div ng-controller="LelylanController">{{device}}</div>
  <script>
    function LelylanController($scope, Device) {
      $scope.device = Device.get({ id: '<id>' });
    }
  </script>

  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-resource.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-cookies.min.js"></script>
  <script src="//s.lelylan.com/angularjs/0.1.0/lelylan.min.js"/></script>
</body>
</html></xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-a-device-ruby">
    <div class="preview">
      <pre class="prettyprint"><xmp>lelylan = Lelylan::Client.new(token: token)
device = lelylan.device('<id>')</xmp></pre>
    </div>
  </div>
</div>

<h4>Example header response</h4>

<div class="preview"><pre><code>HTTP/1.1 200 OK</code></pre></div>

<h4 id="device-representation">Example body response</h4>

<div class="preview"><pre><code>{
  "uri": "http://api.lelylan.com/devices/5042344b95fc441000000001",
  "id": "5042344b95fc441000000001",
  "name": "Light",
  "type": {
    "id": "5042310470eda60a0000000d",
    "uri": "http://api.lelylan.com/types/5042310470eda60a0000000d"
  },
  "categories": ["lights"],
  "physical": { "uri": "http://arduino.house.com/5042205c70eda61" },
  "pending": false,
  "properties": [{
    "uri": "http://api.lelylan.com/properties/518be5a700045e1521000001",
    "id": "518be5a700045e1521000001",
    "value": "off",
    "expected": "off",
    "pending": false,
    "accepted": null
  }, {
    "uri": "http://api.lelylan.com/properties/50420c3a267ff51300000001",
    "id": "50420c3a267ff51300000001",
    "value": "100",
    "expected": "100",
    "pending": false,
    "accepted": {"0": "Min", "25": "Low", "50": "Half", "75": "High", "100": "Max"}
  }],
  "owner": {
    "id": "5036227a4f1b030200000001",
    "uri": "http://api.lelylan.com/people/5036227a4f1b030200000001"
  },
  "maker": {
    "id": "5036227a4f1b030200000001",
    "uri": "http://api.lelylan.com/people/5036227a4f1b030200000001"
  },
  "activated": true,
  "created_at": "2013-05-13T14:22:11Z",
  "updated_at": "2013-05-13T16:41:57Z",
  "updated_from": "Alice"
}</code></pre></div>

<h4>Body Response explained</h4>

<dl>
  <dd><span>uri</span> - Device URI.</dd>
  <dd><span>id</span> - Device ID.</dd>
  <dd><span>name</span> - Device name.</dd>
  <dd><span>type</span> - Device type ID and URI. <a href="/api/types">Learn more about</a>.</dd>
  <dd><span>physical</span> - Connected physical device URI.
  <a href="/api/physicals">Learn more about</a>.</dd>
  <dd><span>categories</span> - Device categories.</dd>
  <dt><span>properties</span> - Device properties.</dt>
  <div>
    <dd><span>uri</span> - Property URI.</dd>
    <dd><span>id</span> - Property ID.</dd>
    <dd><span>value</span> - Property value.</dd>
    <dd><span>expected</span> - Expected property value.
    <a href="/community/faq#value-and-expected-value">Learn more about</a>.</dd>
    <dd><span>pending</span> - Property pending status.
    <a href="/community/faq#pending-devices">Learn more about</a>.</dd>
    <dt><span>accepted</span> - List of accepted values.
    <a href="/community/faq#accepted-values">Learn more about</a>.</dt>
  </div>
  <dd><span>owner</span> - Device owner.</dd>
  <dd><span>maker</span> - Device creator.</dd>
  <dd><span>activated</span> - Device activation status. <a href="/api/devices/activations">Learn more about</a>.</dd>

</dl>

</article>

<br/>

<article>

<h1 class="call"><a name="get-a-device-private-info">GET /devices/:id/privates</a></h1>

<p>
Returns private information for a given device identified from its ID.
</p>

<p>
For security reasons the <a href="#device-representation">device representation</a> does not
show some sensitive information like the device secret and the activation code. The only way to
get them is to use the private service described here.
</p>

<p class="notice">
<span class="label">Notice</span>
To access this service you must use the <a href="/api/oauth#scopes">privates</a> scope.
</p>

<h4>Resource URL</h4>
<div class="preview">
<pre><code>GET http://api.lelylan.com/devices/:id/privates</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>id</span>
        <span class="info">required</span>
      </td>
      <td>
        The ID of the desired device.
      </td>
    </tr>
  </tbody>
</table>

<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#get-a-device-private-info-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#get-a-device-private-info-node" data-toggle="tab" class="node">Node.js</a></li>
  <li><a href="#get-a-device-private-info-angular" data-toggle="tab" class="angular">AngularJS</a></li>
  <li><a href="#get-a-device-private-info-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="get-a-device-private-info-curl">
    <div class="preview">
      <pre><xmp>curl http://api.lelylan.com/devices/<id>/privates \
    -H 'Authorization: Bearer <token>'</xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-a-device-private-info-node">
    <div class="preview">
      <pre class="prettyprint"><xmp>var Lelylan = require('lelylan-node')({ token: token });
Lelylan.Device.privates('<id>', callback);</xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-a-device-private-info-angular">
    <div class="preview">
      <pre class="prettyprint"><xmp><html ng-app="lelylan">
<body>
  <!-- login component here (dev.lelylan.com/api/oauth#implicit-grant-angular) -->
  <div ng-controller="LelylanController">{{device}}</div>
  <script>
    function LelylanController($scope, Device) {
      $scope.device = Device.privates({ id: '<id>' });
    }
  </script>

  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-resource.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-cookies.min.js"></script>
  <script src="//s.lelylan.com/angularjs/0.1.0/lelylan.min.js"/></script>
</body>
</html></xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-a-device-private-info-ruby">
    <div class="pre class="prettyprint"view">
      <pre class="prettyprint"><xmp>lelylan = Lelylan::Client.new(token: token)
device = lelylan.device_privates('<id>');</xmp></pre>
    </div>
  </div>
</div>


<h4>Example header response</h4>

<div class="preview"><pre><code>HTTP/1.1 200 OK</code></pre></div>

<h4 id="device-representation">Example body response</h4>

<div class="preview"><pre><code>{
  "uri": "http://api.lelylan.com/devices/5042344b95fc441000000001",
  "id": "5042344b95fc441000000001",
  "name": "Closet dimmer",
  "secret": "0ca70cc411e9e9de25b47b3e76b8a1932ae48bee6e6fa8808b534994dff5045d",
  "activation_code": "3a9e8732e30c7c06031ad28fd5310425bca3d9bc",
}</code></pre></div>

<h4>Body Response explained</h4>

<dl>
  <dd><span>uri</span> - Device URI.</dd>
  <dd><span>id</span> - Device ID.</dd>
  <dd><span>name</span> - Device name.</dd>
  <dd><span>secret</span> - Unique device secret used to secure the communication with the
  physical world. <a href="/api/physicals">Learn more about</a>.</dd>
  <dd><span>activation_code</span> - Device activation code used to claim the device ownership.
  <a href="/api/devices/activations">Learn more about activation</a>.</dd>
</dl>

</article>

<br>

<article>
<h1 class="call"><a name="get-all-devices">GET /devices</a></h1>

<p>Returns a list of owned devices.</p>

<h4>Resource URL</h4>
<div class="preview">
<pre><code>GET http://api.lelylan.com/devices</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>name</span>
        <span class="info">optional</span>
      </td>
      <td>
        Device name to search.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>type</span>
        <span class="info">optional</span>
      </td>
      <td>
        Type ID to search.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>physical</span>
        <span class="info">optional</span>
      </td>
      <td>
        Physical device URI to search.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>properties[id]</span>
        <span class="info">optional</span>
      </td>
      <td>
        Property ID to search.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>properties[value]</span>
        <span class="info">optional</span>
      </td>
      <td>
        Property value to search.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>properties[expected]</span>
        <span class="info">optional</span>
      </td>
      <td>
        Expected value to search.
        <a href="/community/faq#value-and-expected-value">Learn more about</a>
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>properties[pending]</span>
        <span class="info">optional</span>
      </td>
      <td>
        Pending property status to search.
        <a href="/community/faq#pending-devices">Learn more about</a>
        <span class="info">Valid values: true, false.</span>
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>start</span>
        <span class="info">optional</span>
      </td>
      <td>
        ID of the last fetched record.
        Learn more about <a href="/api/core/#pagination">pagination</a>.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>per</span>
        <span class="info">optional</span>
        <span class="info">default to '25'</span>
      </td>
      <td>
        Number of resources per page.
      </td>
    </tr>
  </tbody>
</table>


<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#get-all-devices-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#get-all-devices-node" data-toggle="tab" class="node">Node.js</a></li>
  <li><a href="#get-all-devices-angular" data-toggle="tab" class="angular">AngularJS</a></li>
  <li><a href="#get-all-devices-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="get-all-devices-curl">
    <div class="preview">
      <pre><xmp>curl http://api.lelylan.com/devices?name=light \
     -H 'Authorization: Bearer <token>'</xmp></pre>
     </div>
  </div>
  <div class="tab-pane" id="get-all-devices-node">
    <div class="preview">
      <pre class="prettyprint"><xmp>var Lelylan = require('lelylan-node')({ token: token });
Lelylan.Device.all({ 'name': 'light' }, callback);</xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-all-devices-angular">
    <div class="preview">
      <pre class="prettyprint"><xmp><html ng-app="lelylan">
<body>
  <!-- login component here (dev.lelylan.com/api/oauth#implicit-grant-angular) -->
  <div ng-controller="LelylanController">
    <div ng-repeat="device in devices">{{device}}</div>
  </div>
  <script>
    function LelylanController($scope, Device) {
      $scope.devices = Device.query({ 'name': 'light' });
    }
  </script>

  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-resource.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-cookies.min.js"></script>
  <script src="//s.lelylan.com/angularjs/0.1.0/lelylan.min.js"/></script>
</body>
</html></xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-all-devices-ruby">
    <div class="preview">
      <pre class="prettyprint"><xmp>lelylan = Lelylan::Client.new(token: token)
devices = lelylan.devices(name: 'light')</xmp></pre>
    </div>
  </div>
</div>

<h4>Example header response</h4>

<div class="preview"><pre><code>HTTP/1.1 200 OK</code></pre></div>

<h4>Example body response</h4>

<div class="preview"><pre><code>[
  { # device representation },
  { # device representation },
  ...
]</code></pre></div>

<p>
  See <a href="#device-representation">device representation</a> for body response.
</p>
</article>



<br/>

<article>

<h1 class="call"><a name="create-a-device">POST /devices</a></h1>

<p>
  Create a device and returns extended information for it.
</p>

<h4>Resource URL</h4>
<div class="preview">
<pre><code>POST  http://api.lelylan.com/devices</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>name</span>
        <span class="info">required</span>
      </td>
      <td>
        Device name.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>type.id</span>
        <span class="info">required</span>
      </td>
      <td>
        Type ID. Check out <a href="http://t.lelylan.com">available types</a> or
        <a href="/api/types/">create</a> a new one.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>physical.uri</span>
        <span class="info">optional</span>
      </td>
      <td>
        Physical device URI. <a href="/api/physicals">Learn more about</a>
      </td>
    </tr>
  </tbody>
</table>


<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#create-a-device-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#create-a-device-node" data-toggle="tab" class="node">Node.js</a></li>
  <li><a href="#create-a-device-angular" data-toggle="tab" class="angular">AngularJS</a></li>
  <li><a href="#create-a-device-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="create-a-device-curl">
    <div class="preview">
      <pre><xmp>curl -X POST http://api.lelylan.com/devices \
     -H 'Authorization: Bearer <token>' \
     -H 'Content-Type: application/json' \
     -d '{
           "name": "Closet dimmer",
           "type": { "id": "<id>" },
           "physical": { "uri": "<physical-device-uri>" }
         }'</xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="create-a-device-node">
    <div class="preview">
      <pre class="prettyprint"><xmp>var Lelylan = require('lelylan-node')({ token: token });
var params = {
  name: 'Closet dimmer',
  type: { id: '<id>' },
  physical: { uri: '<physical-device-uri>' } };

device = Lelylan.Device.create(params, callback);</xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="create-a-device-angular">
    <div class="preview">
      <pre class="prettyprint"><xmp><html ng-app="lelylan">
<body>
  <!-- login component here (dev.lelylan.com/api/oauth#implicit-grant-angular) -->
  <div ng-controller="LelylanController">{{device}}</div>
  <script>
    function LelylanController($scope, Device) {
      var params = {
        name: 'Closet dimmer',
        type: { id: '<id>' },
        physical: { uri: '<physical-device-uri>' } };

      $scope.device = new Device(params);
      $scope.device.$save();
    }
  </script>

  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-resource.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-cookies.min.js"></script>
  <script src="//s.lelylan.com/angularjs/0.1.0/lelylan.min.js"/></script>
</body>
</html></xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="create-a-device-ruby">
    <div class="preview">
      <pre class="prettyprint"><xmp>lelylan = Lelylan::Client.new(token: token)
params = {
  name: 'Closet dimmer',
  type: { id: '<id>' },
  physical: { uri: '<physical-device-uri>' } };

device = lelylan.create_device(params)</xmp></pre>
    </div>
  </div>
</div>

<h4>Example header response</h4>

<div class="preview"><pre><code>HTTP/1.1 201 Created
Location: http://api.lelylan.com/devices/5042344b95fc441000000001</code></pre></div>

<h4>Example body response</h4>

<p>
See <a href="#device-representation">device representation</a> for body response.
</p>

</article>

<br/>

<article>

<h1 class="call"><a name="update-a-device">PUT /devices/:id</a></h1>

<p>
Update a device identified from its ID and returns extended information for it.
</p>

<p class="notice">
<span class="label">notice</span> The device type can't be updated.
</p>

<h4>Resource URL</h4>
<div class="preview">
  <pre><code>PUT  http://api.lelylan.com/devices/:id</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>id</span>
        <span class="info">required</span>
      </td>
      <td>
        The ID of the desired device.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>name</span>
        <span class="info">optional</span>
      </td>
      <td>
        Device name.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>physical.uri</span>
        <span class="info">optional</span>
      </td>
      <td>
        Physical device URI. <a href="/api/physicals">Learn more about</a>
      </td>
    </tr>
  </tbody>
</table>

<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#update-a-device-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#update-a-device-node" data-toggle="tab" class="node">Node.js</a></li>
  <li><a href="#update-a-device-angular" data-toggle="tab" class="angular">AngularJS</a></li>
  <li><a href="#update-a-device-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="update-a-device-curl">
    <div class="preview"><pre><xmp>curl -X PUT http://api.lelylan.com/devices/<id> \
     -H 'Authorization: Bearer <token>' \
     -H 'Content-Type: application/json' \
     -d '{ "name": "Zigbee closet dimmer" }'</xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="update-a-device-node">
    <div class="preview">
      <pre class="prettyprint"><xmp>var Lelylan = require('lelylan-node')({ token: token });
var params = { name: 'Zigbee closet dimmer' };

Lelylan.Device.update('<id>', params, callback);</xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="update-a-device-angular">
    <div class="preview">
      <pre class="prettyprint"><xmp><html ng-app="lelylan">
<body>
  <!-- login component here (dev.lelylan.com/api/oauth#implicit-grant-angular) -->
  <div ng-controller="LelylanController">{{device}}</div>
  <script>
    function LelylanController($scope, Device) {
      var params = { id: '<id>', name: 'Zigbee closet dimmer' };
      $scope.device = new Device(params);
      $scope.device.$update();
    }
  </script>

  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-resource.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-cookies.min.js"></script>
  <script src="//s.lelylan.com/angularjs/0.1.0/lelylan.min.js"/></script>
</body>
</html></xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="update-a-device-ruby">
    <div class="preview">
      <pre class="prettyprint"><xmp>lelylan = Lelylan::Client.new(token: token)
params = { name: 'Zigbee closet dimmer' }

device = lelylan.update_device('<id>', params)</xmp></pre>
    </div>
  </div>
</div>

<h4>Example header response</h4>

<div class="preview"><pre><code>HTTP/1.1 200 OK</code></pre></div>

<h4>Example body response</h4>

<p>
  See <a href="#device-representation">device representation</a> for body response.
</p>

</article>

<br/>

<article>

<h1 class="call"><a name="delete-a-device">DELETE /devices/:id</a></h1>

<p>
  Delete a device identified from its ID and return extended information for it.
</p>

<h4>Resource URL</h4>
<div class="preview">
<pre><code>DELETE http://api.lelylan.com/devices/:id</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>id</span>
        <span class="info">required</span>
      </td>
      <td>
        The ID of the desired device.
      </td>
    </tr>
  </tbody>
</table>

<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#delete-a-device-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#delete-a-device-node" data-toggle="tab" class="node">Node.js</a></li>
  <li><a href="#delete-a-device-angular" data-toggle="tab" class="angular">AngularJS</a></li>
  <li><a href="#delete-a-device-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="delete-a-device-curl">
    <div class="preview"><pre><xmp>curl -X DELETE http://api.lelylan.com/devices/<id> \
     -H 'Authorization: Bearer <token>' \
     -H 'Content-Length: 0'</xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="delete-a-device-node">
    <div class="preview">
      <pre class="prettyprint"><xmp>var Lelylan = require('lelylan-node')({ token: token });
Lelylan.Device.delete('<id>', callback);</xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="delete-a-device-angular">
    <div class="preview">
      <pre class="prettyprint"><xmp><html ng-app="lelylan">
<body>
  <!-- login component here (dev.lelylan.com/api/oauth#implicit-grant-angular) -->
  <div ng-controller="LelylanController">{{device}}</div>
  <script>
    function LelylanController($scope, Device) {
      $scope.device = new Device({ id: '<id>' });
      $scope.device.$delete();
    };
  </script>

  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-resource.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-cookies.min.js"></script>
  <script src="//s.lelylan.com/angularjs/0.1.0/lelylan.min.js"/></script>
</body>
</html></xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="delete-a-device-ruby">
    <div class="preview">
      <pre class="prettyprint"><xmp>lelylan = Lelylan::Client.new(token: token)
device = lelylan.delete_device('<id>')</xmp></pre>
    </div>
  </div>
</div>

<h4>Example header response</h4>

<div class="preview"><pre><code>HTTP/1.1 200 OK</code></pre></div>

<h4>Example body response</h4>

<p>
  See <a href="#device-representation">device representation</a> for body response.
</p>

</article>

</br>

<article>

<h1 class="call"><a name="update-properties">PUT /devices/:id/properties</a></h1>

<p>
  Update properties on a device identified from its ID and returns extended
  representation for it. If a physical device is connected, Lelylan forward the
  changes to the <a href="/api/physicals">physical world</a>.
</p>

<h4>Resource URL</h4>
<div class="preview">
<pre><code>PUT http://api.lelylan.com/devices/:id/properties</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>id</span>
        <span class="info">required</span>
      </td>
      <td>
        The ID of the desired device.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>properties</span>
        <span class="info">required</span>
      </td>
      <td>
        Array of properties to change.
      </td>
    </tr>
    <tr>
      <td class="parameter nested">
        <span>&raquo; property.id</span>
        <span class="info">required</span>
      </td>
      <td>
        Property ID.
      </td>
    </tr>
    <tr>
      <td class="parameter nested">
        <span>&raquo; property.value</span>
        <span class="info">optional</span>
      </td>
      <td>
        Property value.
      </td>
    </tr>
    <tr>
      <td class="parameter nested">
        <span>&raquo; property.expected</span>
        <span class="info">optional</span>
      </td>
      <td>
        Expected property value. <a href="/community/faq#value-and-expected-value">Learn more about</a>.
      </td>
    </tr>
    <tr>
      <td class="parameter nested">
        <span>&raquo; property.pending</span>
        <span class="info">optional</span>
      </td>
      <td>
        Property pending status. <a href="/community/faq#pending-devices">Learn more about</a>.
        <span class="info">Valid values: true, false.</span>
      </td>
    </tr>
    <tr>
      <td class="parameter nested">
        <span>&raquo; property.accepted</span>
        <span class="info">optional</span>
      </td>
      <td>
        List of accepted values. <a href="/community/faq#accepted-values">Learn more about</a>.
        <span class="info">Valid values: JSON objects.</span>
      </td>
    </tr>
  </tbody>
</table>

<h4>Example Requests</h4>

<p>Set the device <code>status</code> to <code>on</code> and the device <code>intensity</code> to <code>50%</code>.</p>

<ul class="nav nav-tabs">
  <li class="active"><a href="#update-properties-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#update-properties-node" data-toggle="tab" class="node">Node.js</a></li>
  <li><a href="#update-properties-angular" data-toggle="tab" class="angular">AngularJS</a></li>
  <li><a href="#update-properties-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="update-properties-curl">
    <div class="preview"><pre><xmp>curl -X PUT http://api.lelylan.com/devices/<id>/properties \
     -H 'Authorization: Bearer <token>' \
     -H 'Content-Type: application/json' \
     -d '{
           "properties": [{
             "id": "<status>",
             "value": "on"
           },{
             "id": "<intensity>",
             "value": "50" }
           ]
         }'</xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="update-properties-node">
    <div class="preview">
      <pre class="prettyprint"><xmp>var Lelylan = require('lelylan-node')({ token: token });
var params = {
  properties:
    [ { id: '<status>',
        value: 'on' },
      { id: '<intensity>',
        value: '50' } ] };

Lelylan.Device.properties('<id>', params, callback);</xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="update-properties-angular">
    <div class="preview">
      <pre class="prettyprint"><xmp><html ng-app="lelylan">
<body>
  <!-- login component here (dev.lelylan.com/api/oauth#implicit-grant-angular) -->
  <div ng-controller="LelylanController">{{device}}</div>
  <script>
    function LelylanController($scope, Device) {
    var params = {
      id: '<id>',
      properties:
        [ { id: '<status>',
            value: 'on' },
          { id: '<intensity>',
            value: '50' } ] };

      $scope.device = new Device(params);
      $scope.device.$properties();
    }
  </script>

  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-resource.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-cookies.min.js"></script>
  <script src="//s.lelylan.com/angularjs/0.1.0/lelylan.min.js"/></script>
</body>
</html></xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="update-properties-ruby">
    <div class="preview">
      <pre class="prettyprint"><xmp>lelylan = Lelylan::Client.new(token: token)
params = {
  properties:
    [ { id: '<status>',
        value: 'on' },
      { id: '<intensity>',
        value: '50' } ] }

device = lelylan.device_properties('<id>', params)</xmp></pre>
    </div>
  </div>
</div>

<div id="physical-request-process">
<%= render 'shared/content/physical_not_physical' %>
</div>

<h4>Example body response</h4>
<p>
  See <a href="#device-representation">device representation</a> for body response.
</p>

</article>

<br/>

<article>

<h1 class="call"><a name="execute-a-function">PUT /devices/:id/functions</a></h1>

<p>
  Execute a function on a device identified from its ID and returns extended representation
  for it. If a physical device is connected, Lelylan forward the changes to the
  <a href="/api/physicals">physical world</a>.
</p>

<h4>Resource URL</h4>
<div class="preview">
<pre><code>PUT http://api.lelylan.com/devices/:id/functions</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>id</span>
        <span class="info">required</span>
      </td>
      <td>
        The ID of the desired device.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>function</span>
        <span class="info">required</span>
      </td>
      <td>
        Function ID to execute.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>properties</span>
        <span class="info">optional</span>
      </td>
      <td>
        Array of properties.
      </td>
    </tr>
    <tr>
      <td class="parameter nested">
        <span>&raquo; property.id</span>
        <span class="info">required</span>
      </td>
      <td>
        Property ID.
      </td>
    </tr>
    <tr>
      <td class="parameter nested">
        <span>&raquo; property.value</span>
        <span class="info">optional</span>
      </td>
      <td>
        Property value.
      </td>
    </tr>
    <tr>
      <td class="parameter nested">
        <span>&raquo; property.expected</span>
        <span class="info">optional</span>
      </td>
      <td>
        Expected property value. <a href="/community/faq#value-and-expected-value">Learn more about</a>
      </td>
    </tr>
    <tr>
      <td class="parameter nested">
        <span>&raquo; property.pending</span>
        <span class="info">optional</span>
      </td>
      <td>
        Property pending status. <a href="/community/faq#pending-devices">Learn more about</a>
        <span class="info">Valid values: true, false.</span>
      </td>
    </tr>
  </tbody>
</table>

<h4>Example Requests</h4>

<p>
<strong>Turn on a device</strong>. In this example we do not send properties because the function
<code>turns on</code> set the property <code>status</code> to <code>on</code> by default.
</p>

<ul class="nav nav-tabs">
  <li class="active"><a href="#execute-a-function-i-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#execute-a-function-i-node" data-toggle="tab" class="node">Node.js</a></li>
  <li><a href="#execute-a-function-i-angular" data-toggle="tab" class="angular">AngularJS</a></li>
  <li><a href="#execute-a-function-i-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="execute-a-function-i-curl">
    <div class="preview"><pre><xmp>curl -X PUT http://api.lelylan.com/devices/<id>/functions \
     -H 'Authorization: Bearer <token>' \
     -H 'Content-Type: application/json' \
     -d '{ "function": "http://api.lelylan.com/functions/<turn-on>" }'</xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="execute-a-function-i-node">
    <div class="preview">
      <pre class="prettyprint"><xmp>var Lelylan = require('lelylan-node')({ token: token });
var params = { function: '<turn-on>' };

Lelylan.Device.execute('<id>', params, callback);</xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="execute-a-function-i-angular">
    <div class="preview">
      <pre class="prettyprint"><xmp><html ng-app="lelylan">
<body>
  <!-- login component here (dev.lelylan.com/api/oauth#implicit-grant-angular) -->
  <div ng-controller="LelylanController">{{device}}</div>
  <script>
    function LelylanController($scope, Device) {
      var params = { function: '<turn-on>' };
      $scope.device = new Device({ id: '<id>', function: params.function});
      $scope.device.$execute();
    }
  </script>

  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-resource.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-cookies.min.js"></script>
  <script src="//s.lelylan.com/angularjs/0.1.0/lelylan.min.js"/></script>
</body>
</html></xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="execute-a-function-i-ruby">
    <div class="preview">
      <pre class="prettyprint"><>lelylan = Lelylan::Client.new(token: token)
params = { function: '<turn-on>' }

device = lelylan.execute('<id>', params)</xmp></pre>
    </div>
  </div>
</div>

<p>
<strong>Set the device intensity to 90%</strong>. In this example the function sets the
property <code>status</code> to <code>on</code> by default and expects the intensity value
to be sent from the user.
</p>

<ul class="nav nav-tabs">
  <li class="active"><a href="#execute-a-function-ii-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#execute-a-function-ii-node" data-toggle="tab" class="node">Node.js</a></li>
  <li><a href="#execute-a-function-ii-angular" data-toggle="tab" class="angular">AngularJS</a></li>
  <li><a href="#execute-a-function-ii-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="execute-a-function-ii-curl">
    <div class="preview">
      <div class="preview">
        <pre><xmp>curl -X PUT http://api.lelylan.com/devices/<id>/functions \
     -H 'Authorization: Bearer <token>' \
     -H 'Content-Type: application/json' \
     -d '{
           "function": "<set-intensity>"
           "properties": [{
             "id": "<intensity>",
             "value": "90" }
           ]
         }'</xmp></pre>
      </div>
    </div>
  </div>
  <div class="tab-pane" id="execute-a-function-ii-node">
    <div class="preview">
      <pre class="prettyprint"><xmp>var Lelylan = require('lelylan-node')({ token: token });
var params = {
  function: '<set-intensity>',
  properties:
    [ { id: '<intensity>',
        value: '90' } ] };

Lelylan.Device.execute('<id>', params, callback);</xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="execute-a-function-ii-angular">
    <div class="preview">
      <pre class="prettyprint"><xmp><html ng-app="lelylan">
<body>
  <!-- login component here (dev.lelylan.com/api/oauth#implicit-grant-angular) -->
  <div ng-controller="LelylanController">{{device}}</div>
  <script>
    function LelylanController($scope, Device) {
    var params = {
      id: '<id>',
      function: '<set-intensity>',
      properties:
        [ { id: '<intensity>',
            value: '90' } ] };

      $scope.device = new Device(params);
      $scope.device.$execute();
    }
  </script>

  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-resource.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-cookies.min.js"></script>
  <script src="//s.lelylan.com/angularjs/0.1.0/lelylan.min.js"/></script>
</body>
</html></xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="execute-a-function-ii-ruby">
    <div class="preview">
      <pre class="prettyprint"><xmp>lelylan = Lelylan::Client.new(token: token)
params = {
  function: 'http://api.lelylan.com/functions/<set-intensity>',
  properties:
    [ { uri: 'http://api.lelylan.com/properties/<intensity>',
        value: '90' } ] };

device = lelylan.execute('<id>', params)</xmp></pre>
    </div>
  </div>
</div>

<p class="notice">
  <span class="label">Notice</span>
  To deeply understand how functions work check out the
  <a href="/api/types/functions">functions API</a>.
</p>

<%= render 'shared/content/physical_not_physical' %>

<h4>Example body response</h4>
<p>
  See <a href="#device-representation">device representation</a> for body response.
</p>

</article>
