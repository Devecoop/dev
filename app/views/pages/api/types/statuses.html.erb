<article>

<aside class="menu">
</br>
<table>
  <tbody>
    <tr><td><a href="" class="upcase"><%= title %></a></td></tr>
    <tr><td>&raquo; <a href="#get-a-status">Get a status</a></td></tr>
    <tr><td>&raquo; <a href="#get-all-statuses">Get all statuses</a></td></tr>
    <tr><td>&raquo; <a href="#create-a-status">Create a status</a></td></tr>
    <tr><td>&raquo; <a href="#update-a-status">Update a status</a></td></tr>
    <tr><td>&raquo; <a href="#delete-a-status">Delete a status</a></td></tr>
  </tbody>
</table>
</aside>

<h1 class="call"><a name="statuses"><%= title %></a></h1>

<p>
Properties are not always enough to describe the status of a device. Think at a roller
shutter for example. It has the property <code>aperture</code> that is <code>100</code>
when open or <code>0</code> when closed. But what if the roller shutter is opening? It
is nether open or close. To have a complete control over the device status in a specific
moment of its life is to use the status API.
</p>

</article>

<br/>

<article>

<h1 class="call"><a name="get-a-status">GET /statuses/:id</a></h1>

<p>Returns extended information for a given <a href="/api/core/#public-resources">public</a> status identified from its ID.</p>

<h4>Resource URL</h4>
<div class="preview">
  <pre><code class="no-highlight">GET http://api.lelylan.com/statuses/:id</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>id</span>
        <span class="info">required</span>
      </td>
      <td>
        The ID of the desired status.
      </td>
    </tr>
  </tbody>
</table>

<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#get-a-status-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#get-a-status-node" data-toggle="tab" class="node">Node.js</a></li>
  <li><a href="#get-a-status-javascript" data-toggle="tab" class="javascript">Javascript</a></li>
  <li><a href="#get-a-status-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="get-a-status-curl">
    <div class="preview">
        <pre><code class="no-highlight">curl http://api.lelylan.com/statuses/&lt;id&gt;</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-a-status-node">
    <div class="preview">
      <pre><code class="javascript">var Lelylan = require('lelylan-node')();
Lelylan.Status.find('id', callback);</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-a-status-javascript">
    <div class="preview">
        <pre><code># todo</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-a-status-ruby">
    <div class="preview">
        <pre><code class="ruby">lelylan = Lelylan::Client.new
status = lelylan.status('&lt;id&gt;')</code></pre>
    </div>
  </div>
</div>

<h4>Example header response</h4>

  <div class="preview"><pre><code class="no-highlight">HTTP/1.1 200 OK</code></pre></div>

<h4 id="status-representation">Example body response</h4>

<div class="preview"><pre><code>{
  "uri": "http://api.lelylan.com/statuses/5042176370eda61200000004",
  "id": "5042176370eda61200000004",
  "name": "Setting intensity",
  "created_at": "2012-09-01T14:10:43Z",
  "updated_at": "2012-09-01T14:10:43Z",
  "properties":[{
    "uri": "http://api.lelylan.com/properties/50420c7e267ff51000000001",
    "id": "50420c7e267ff51000000001",
    "value": ["on"],
    "pending": false
  }, {
    "uri": "http://api.lelylan.com/properties/50420c7e267ff51300000001",
    "id": "50420c7e267ff51300000001",
    "value": ["0..100"],
    "pending": true
  }]
}</code></pre>
</div>

<h4>Body response explained</h4>

<dl>
  <dd><span>uri</span> - Status URI.</dd>
  <dd><span>id</span> - Status ID.</dd>
  <dd><span>name</span> - Status name.</dd>
  <dd><span>properties</span> - List of properties that affect the status.</dd>
  <div>
    <dd><span>uri</span> - Property URI.</dd>
    <dd><span>id</span> - Property ID.</dd>
    <dd><span>value</span> - List of matching values. It accepts specific values or range of values.</dd>
    <dd><span>pending</span> - Property pending status. <a href="/community/faq#pending-devices">Learn more about</a>.</dd>
  </div>
</dl>

<br/>

<h1><a name="connections">How do I use the matching values?</a></h1>

<p>
A status is based on its properties. To understand when a status match to a device
in a specific moment of its life you need to check two things.
</p>

<ul>
  <li>If the device property <code>value</code> is included into the status <code>value</code> list.</li>
  <li>If the device property <code>pending</code> status is the same as the <code>pending</code> value.</li>
</ul>

<p class="notice">
<span class="label">Notice</span>
Lelylan does not offer a server side service to get back the device status as this is a
client side specific task. <a href="/community/faq/#device-status">Learn more about</a>.
</p>

</article>


<br/>

<article>
  <h1 class="call"><a name="get-all-statuses">GET /statuses</a></h1>

  <p>Returns a list of owned (and <a href="/api/core/#public-resources">public</a>) statuses.</p>

  <h4>Resource URL</h4>
  <div class="preview">
  <pre><code class="no-highlight"># created statuses
GET http://api.lelylan.com/statuses</code><code class="no-highlight"># all statuses
GET http://api.lelylan.com/statuses/public</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>name</span>
        <span class="info">optional</span>
      </td>
      <td>
        Status name to search.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>start</span>
        <span class="info">optional</span>
      </td>
      <td>
        URI of the last fetched record. Learn more about <a href="/api/core/#pagination">pagination</a>.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>per</span>
        <span class="info">optional</span>
        <span class="info">default to '25'</span>
      </td>
      <td>
        Number of resources per page.
      </td>
    </tr>
  </tbody>
</table>

<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#get-all-statuses-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#get-all-statuses-node" data-toggle="tab" class="node">Node.js</a></li>
  <li><a href="#get-all-statuses-javascript" data-toggle="tab" class="javascript">Javascript</a></li>
  <li><a href="#get-all-statuses-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="get-all-statuses-curl">
    <div class="preview"><pre><code class="no-highlight">curl http://api.lelylan.com/statuses \
     -H 'Authorization: Bearer &lt;token&gt;'</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-all-statuses-node">
    <div class="preview">
      <pre><code class="javascript">var Lelylan = require('lelylan-node')({ token: token });
Lelylan.Status.all({}, callback); // owned resources

var Lelylan = require('lelylan-node')();
Lelylan.Status.public({}, callback); // all existing resources</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-all-statuses-javascript">
    <div class="preview">
      <pre><code># todo</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-all-statuses-ruby">
    <div class="preview">
      <pre><code class="ruby">lelylan = Lelylan::Client.new(token: token)
statuses = lelylan.statuses # owned resources

lelylan = Lelylan::Client.new
statuses = lelylan.public_statuses # all existing resources</code></pre>
    </div>
  </div>
</div>

<h4>Example header response</h4>

<div class="preview"><pre><code class="no-highlight">HTTP/1.1 200 OK</code></pre></div>

<h4>Example body response</h4>

<div class="preview highlight"><pre><code class="no-highlight">[
  { # status representation },
  { # status representation },
  ...
]</code></pre>
</div>

<p>
  See <a href="#status-representation">status representation</a> for body response.
</p>

</article>

<br/>

<article>

<h1 class="call"><a name="create-a-status">POST /statuses</a></h1>

<p>
  Create a status and returns extended information for it.
</p>

<h4>Resource URL</h4>
<div class="preview">
<pre><code class="no-highlight">POST  http://api.lelylan.com/statuses</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>name</span>
        <span class="info">required</span>
      </td>
      <td>
        Status name.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>properties</span>
        <span class="info">optional</span>
      </td>
      <td>
        Array of properties affecting the status.
      </td>
    </tr>
    <tr>
      <td class="parameter nested">
        <span>&raquo; property.uri</span>
        <span class="info">required</span>
      </td>
      <td>
        Property URI.
      </td>
    </tr>
    <tr>
      <td class="parameter nested">
        <span>&raquo; property.value</span>
        <span class="info">optional</span>
      </td>
      <td>
        List of matching values and ranges.
      </td>
    </tr>
    <tr>
      <td class="parameter nested">
        <span>&raquo; property.pending</span>
        <span class="info">optional</span>
      </td>
      <td>
        Property pending status. <a href="/community/faq#pending-devices">Learn more about</a>
        <span class="info">Valid values: true, false.</span>
      </td>
  </tbody>
</table>

<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#create-a-status-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#create-a-status-node" data-toggle="tab" class="node">Node.js</a></li>
  <li><a href="#create-a-status-javascript" data-toggle="tab" class="javascript">Javascript</a></li>
  <li><a href="#create-a-status-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="create-a-status-curl">
    <div class="preview">
      <pre><code class="no-highlight">curl -X POST http://api.lelylan.com/statuses \
     -H 'Authorization: Bearer &lt;token&gt;' \
     -H 'Content-Type: application/json' \
     -d '{
           "name": "Max intensity",
           "properties": [{
              "uri": "http://api.lelylan.com/properties/&lt;intensity&gt;",
              "value": ["100"],
              "pending": false
            }]
         }'</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="create-a-status-node">
    <div class="preview">
      <pre><code class="javascript">var Lelylan = require('lelylan-node')({ token: token });
var params = {
  'name': 'Max intensity',
  'properties':
    [ { 'uri': 'http://api.lelylan.com/properties/&lt;intensity&gt;',
        'value': ['100'],
        'pending': false } ] };

Lelylan.Status.create(params, callback);</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="create-a-status-javascript">
    <div class="preview">
      <pre><code># todo</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="create-a-status-ruby">
    <div class="preview">
      <pre><code class="ruby">lelylan = Lelylan::Client.new(token: token)
params = {
  name: 'Max intensity',
  properties:
    [ { uri: 'http://api.lelylan.com/properties/&lt;intensity&gt;',
        value: ['100'],
        pending: false } ] }

status = lelylan.create_status(params)</code></pre>
    </div>
  </div>
</div>

<h4>Example header response</h4>

<div class="preview"><pre><code class="no-highlight">HTTP/1.1 201 Created
Location: http://api.lelylan.com/statuses/5042176370eda61200000004</code></pre></div>

<h4>Example body response</h4>

<p>
  See <a href="#status-representation">status representation</a> for body response.
</p>

</article>

<br/>

<article>

<h1 class="call"><a name="update-a-status">PUT /statuses/:id</a></h1>

<p>
  Update a status identified from its ID and returns extended information for it.
</p>

<h4>Resource URL</h4>
<div class="preview">
<pre><code class="no-highlight">PUT  http://api.lelylan.com/statuses/:id</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>id</span>
        <span class="info">required</span>
      </td>
      <td>
        The ID of the desired status.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>name</span>
        <span class="info">optional</span>
      </td>
      <td>
        Status name.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>properties</span>
        <span class="info">optional</span>
      </td>
      <td>
        Array of properties affecting the status.
      </td>
    </tr>
    <tr>
      <td class="parameter nested">
        <span>&raquo; property.uri</span>
        <span class="info">required</span>
      </td>
      <td>
        Property URI.
      </td>
    </tr>
    <tr>
      <td class="parameter nested">
        <span>&raquo; property.value</span>
        <span class="info">optional</span>
      </td>
      <td>
        List of matching values and ranges.
      </td>
    </tr>
    <tr>
      <td class="parameter nested">
        <span>&raquo; property.pending</span>
        <span class="info">optional</span>
      </td>
      <td>
        Property pending status. <a href="/community/faq#pending-devices">Learn more about</a>
        <span class="info">Valid values: true, false.</span>
      </td>
    </tr>
  </tbody>
</table>

<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#update-a-status-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#update-a-status-node" data-toggle="tab" class="node">Node.js</a></li>
  <li><a href="#update-a-status-javascript" data-toggle="tab" class="javascript">Javascript</a></li>
  <li><a href="#update-a-status-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="update-a-status-curl">
    <div class="preview"><pre><code class="no-highlight">curl -X PUT http://api.lelylan.com/statuses/5042176370eda61200000004 \
     -H 'Authorization: Bearer &lt;token&gt;' \
     -H 'Content-Type: application/json' \
     -d '{
           "name": "Lowering intensity",
           "properties": [{
              "uri": "http://api.lelylan.com/properties/&lt;intensity&gt;",
              "value": ["0..10"],
              "pending": true
            }]
         }'</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="update-a-status-node">
    <div class="preview">
      <pre><code class="javascript">var Lelylan = require('lelylan-node')({ token: token });
var params = {
  'name': 'Lowering intensity',
  'properties':
    [ { 'uri': 'http://api.lelylan.com/properties/&lt;intensity&gt;',
        'value': ['0..10'],
        'pending': true } ] };

Lelylan.Status.update('id', params, callback);</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="update-a-status-javascript">
    <div class="preview">
      <pre><code># todo</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="update-a-status-ruby">
    <div class="preview">
      <pre><code class="ruby">lelylan = Lelylan::Client.new(token: token)
params = {
  name: 'Lowering intensity',
  properties:
    [ { uri: 'http://api.lelylan.com/properties/&lt;intensity&gt;',
        value: ['0..10'],
        pending: true } ] }

status = lelylan.update_status('&lt;id&gt;', params)</code></pre>
    </div>
  </div>
</div>

<p class="notice">
<span class="label">Notice</span>
When updating the <code>properties</code> field all previous connected properties are replaced.
</p>

<h4>Example header response</h4>

<div class="preview"><pre><code class="no-highlight">HTTP/1.1 200 OK</code></pre></div>

<h4>Example body response</h4>

<p>
  See <a href="#status-representation">status representation</a> for body response.
</p>

</article>

<br/>

<article>

<h1 class="call"><a name="delete-a-status">DELETE /statuses/:id</a></h1>

<p>
Delete a statuses identified from its ID and returns extended information for it.</br>
Connected properties are not deleted.
</p>

<h4>Resource URL</h4>
<div class="preview">
<pre><code class="no-highlight">DELETE http://api.lelylan.com/statuses/:id</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>id</span>
        <span class="info">required</span>
      </td>
      <td>
        The ID of the desired status.
      </td>
    </tr>
  </tbody>
</table>

<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class=" active"><a href="#delete-a-status-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#delete-a-status-node" data-toggle="tab" class="node">Node.js</a></li>
  <li><a href="#delete-a-status-javascript" data-toggle="tab" class="javascript">Javascript</a></li>
  <li><a href="#delete-a-status-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="delete-a-status-curl">
    <div class="preview"><pre><code class="no-highlight">curl -X DELETE http://api.lelylan.com/statuses/&lt;id&gt; \
     -H 'Authorization: Bearer &lt;token&gt;' \
     -H 'Content-Length: 0'</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="delete-a-status-node">
    <div class="preview">
      <pre><code class="javascript">var Lelylan = require('lelylan-node')({ token: token });
Lelylan.Status.delete('id', callback);</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="delete-a-status-javascript">
    <div class="preview">
      <pre><code># todo</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="delete-a-status-ruby">
    <div class="preview">
      <pre><code class="ruby">lelylan = Lelylan::Client.new(token: token)
status = lelylan.delete_status('&lt;id&gt;')</code></pre>
    </div>
  </div>
</div>

<h4>Example header response</h4>

<div class="preview"><pre><code class="no-highlight">HTTP/1.1 200 OK</code></pre></div>

<h4>Example body response</h4>

<p>
See <a href="#status-representation">status representation</a> for body response.
</p>

</article>
