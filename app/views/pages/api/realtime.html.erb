<article>

<aside class="menu">
</br>
<table>
  <tbody>
    <tr><td><a href="" class="upcase"><%= title %></a></td></tr>
    <tr><td>&raquo; <a href="#realtime">Real-time</a></td></tr>
    <tr><td>&raquo; <a href="#how-to-subscribe">How to subscribe</a></td></tr>
    <tr><td>&raquo; <a href="#receiving-updates">Receiving updates</a></td></tr>
    <tr><td>&raquo; <a href="#subscriptions-api">Subscriptions API</a></td></tr>
    <tr><td class="inside">&raquo; <a href="#get-a-subscription">Get a subscription</a></td></tr>
    <tr><td class="inside">&raquo; <a href="#get-all-subscriptions">Get client subscriptions</a></td></tr>
    <tr><td class="inside">&raquo; <a href="#create-a-subscription">Create a subscription</a></td></tr>
    <tr><td class="inside">&raquo; <a href="#update-a-subscription">Update a subscription</a></td></tr>
    <tr><td class="inside">&raquo; <a href="#delete-a-subscription">Delete a subscription</a></td></tr>
  </tbody>
</table>
</aside>

<h1 class="call"><a name="realtime"><%= title %></a></h1>

<p>
Real-time Lelylan updates provide your application with instant notifications of
what happens to Lelylan and the physical world. The most interesting way to view the world
is live, as it happens. Through the use of a couple simple web hooks, we've been able to create
a system where your application gets notified of changes as they happen.
</p>

<p>
Our real-time API serves a couple of basic needs. First, instead of polling the Lelylan servers
to check to see what's happening, we POST to your servers new data when available. Second,
developers running servers like Node.js can provide real-time experiences to their users.
</p>

</article>

</br>

<article>

<h1 class="call"><a name="how-to-subscribe">How to subscribe</a></h1>

<p>
You can get real-time updates by subscribing to a <strong>resource</strong>
and its related <strong>event</strong>.
</p>

<h3 class="call"><a name="register">Register a client</a></h3>

<p>
Register a <%= link_to 'client', "#{people_host}/oauth/applications" %>
to obtain a Client ID and Client Secret.
</p>

<h3 class="call"><a name="callback">Create a callback URL</a></h3>

<p>
Create a service able to receive Lelylan updates. This callback URL must support
the POST method because when we have new data we POST this data to your callback.
</p>

<h3 class="call"><a name="subscriptions">Subscriptions</a></h3>

<p>
The following table describes the available resources and events you can subscribe at.
</p>

<table class="zebra-striped lowcase">
  <thead>
    <tr>
      <th style="width: 95px;">RESOURCE</th>
      <th style="width: 115px;">EVENT</th>
      <th style="width: 100px;">RECEIVED DATA</th>
      <th>DESCRIPTION</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>
        <code>devices</code>
      </td>
      <td>
        <code>property-update</code>
      </td>
      <td>
        <a href="/api/devices#device-representation">Device</a>
      </td>
      <td>
        Receive a notification when a device
        <a href="/api/devices#update-properties">updates its properties</a> or
        <a href="/api/devices#execute-a-function">executes a function</a>.
      </td>
    </tr>
    <tr>
      <td>
        <code>devices</code>
      </td>
      <td>
        <code>create</code>
      </td>
      <td>
        <a href="/api/devices#device-representation">Device</a>
      </td>
      <td>
        Receive a notification when a <a href="/api/devices#create-a-device">device is created</a>.
      </td>
    </tr>
    <tr>
      <td>
        <code>devices</code>
      </td>
      <td>
        <code>update</code>
      </td>
      <td>
        <a href="/api/devices#device-representation">Device</a>
      </td>
      <td>
        Receive a notification when a <a href="/api/devices#update-a-device">device is update</a>.
      </td>
    </tr>
    <tr>
      <td>
        <code>devices</code>
      </td>
      <td>
        <code>destroy</code>
      </td>
      <td>
        <a href="/api/devices#device-representation">Device</a>
      </td>
      <td>
        Receive a notification when a <a href="/api/devices#delete-a-device">device is deleted</a>.
      </td>
    </tr>
    <tr>
      <td>
        <code>locations</code>
      </td>
      <td>
        <code>create</code>
      </td>
      <td>
        <a href="/api/locations#location-representation">Location</a>
        </td>
      <td>
        Receive a notification when a <a href="/api/locations#create-a-location">location is created</a>.
      </td>
    </tr>
    <tr>
      <td>
        <code>locations</code>
      </td>
      <td>
        <code>update</code>
      </td>
      <td>
        <a href="/api/locations#location-representation">Location</a>
        </td>
      <td>
        Receive a notification when a <a href="/api/locations#update-a-location">location is update</a>.
      </td>
    </tr>
    <tr>
      <td>
        <code>locations</code>
      </td>
      <td>
        <code>destroy</code>
      </td>
      <td>
        <a href="/api/locations#location-representation">Location</a>
        </td>
      <td>
        Receive a notification when a <a href="/api/locations#delete-a-location">location is deleted</a>.
      </td>
    </tr>
    <%#<tr>%>
      <%#<td>%>
        <%#<code>consumptions</code>%>
      <%#</td>%>
      <%#<td>%>
        <%#<code>create</code>%>
      <%#</td>%>
      <%#<td>%>
        <%#<a href="/api/devices/consumptions#consumption-representation">Consumption</a>%>
        <%#</td>%>
      <%#<td>%>
        <%#Receive a notification when a <a href="/api/devices/consumptions#create-a-consumption">%>
        <%#consumption is created</a>.%>
      <%#</td>%>
    <%#</tr>%>
  </tbody>
</table>

<h3 class="call"><a name="how-to-create-a-subscription">How to create a subscription</a></h3>

<p>
  To create a subscription make a POST request to the subscriptions endpoint setting the
  <code>resource</code> and <code>event</code> you want notifications for. Here an example
  where we subscribe to all device properties updates. Check out the
  <a href="#subscriptions-api">subscriptions API</a> for more information.
</p>

<ul class="nav nav-tabs">
  <li class="active"><a href="#get-a-subscription-example-curl" data-toggle="tab" class="curl">Curl</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="create-a-subscription-example-curl">
    <div class="preview">
      <pre><xmp>curl -X POST http://api.lelylan.com/subscriptions \
     -u <client-id>:<client-secret> \
     -H 'Content-Type: application/json' \
     -d '{
          "resource": "device",
          "event": "property-update",
          "callback_uri": "http://callback.com/lelylan"
        }'</xmp></pre>
    </div>
  </div>
</div>

<p class="notice">
<span class="label">Notice</span>
Subscriptions are always referred to a specific
<%= link_to 'client', "#{people_host}/oauth/applications" %>.
To make the request work, basic authenticate your request using the application
Client ID and the Client Secret.
</p>

</article>

</br>

<article>

<h1 class="call"><a name="receiving-updates">Receiving updates</a></h1>

<p>
When a user fires an event (for example creating a new device), a POST request is sent
to the callback URL defined in the subscription.
</p>

<h4 id="payload-representation">Payload example</h4>

<div class="preview"><pre><code>{
  "subscription": { "id": "50f54f5f5e74ef2873000006" },
  "resource": "devices",
  "event": "create",
  "nonce": "6c84fb90-12c4-11e1-840d-7b25c5ee775a",
  "data": {
     "uri": "http://api.lelylan.com/devices/5042344b95fc441000000001",
     "id": "5042344b95fc441000000001",
     "name": "Closet dimmer",
     "type": { "uri": "http://api.lelylan.com/types/5042310470eda60a0000000d" },
     "pending": false,
     "created_at": "2012-09-01T16:00:32Z",
     "updated_at": "2012-09-01T16:00:32Z",
     "properties": [{
        "uri": "http://api.lelylan.com/properties/50420c7e267ff51000000001",
        "id": "50420c7e267ff51000000001",
        "value": "on", "physical": "on" }],
     "physical": {
        "uri": "http://mqtt.lelylan.com/physicals/5042205c70eda61000000003"
     }
  }
}</code></pre></div>

<h4>Payload explained</h4>

<dl>
  <dd><span>subscription.id</span> - Subscription ID firing the notification</dd>
  <dd><span>resource</span> - Notified resource. See <a href="#subscriptions">available resources</a>.</dd>
  <dd><span>event</span> - Notified event. See <a href="#subscriptions">available events</a>.</dd>
  <dd><span>nonce</span> - Random unique identifier to avoid replay attacks.</dd>
  <dd><span>data</span> - Notified resource representation.
  See the received data column in <a href="#subscriptions">subscription table</a>
  to know which resource representation is notified based on the subscribed event.
  </dd>
</dl>

<h4>Callback response</h4>

<p>
  Respond with a 2xx HTTP status when the callback URL is called. If a different
  HTTP status is received, Lelylan will try to re-send the payload 10 times with an
  exponentially growing delay between the requests (1 sec, 3 secs, 9, secs, 27 secs,
  ..., 16 hours). After the 10th failed attempt the event is set as processed and no
  more calls are made.
</p>

<h4>Security check</h4>

<p>
To verify that the payload you received comes from us, you must verify the <code>X-Hub-Signature</code>
header. This is a SHA-1-signed hexadecimal digest using your client secret as key and the
payload as message. <a href="/community/faq#signature">Learn more about</a>.
</p>

</article>

</br></br>

<article>

<h1 class="call"><a name="subscriptions-api">Subscriptions API</a></h1>

</article>

<article>

<h2 class="call"><a name="get-a-subscription">GET /subscriptions/:id</a></h2>

<p>
  Returns extended information for a given subscription identified from its ID.
</p>

<h4>Resource URL</h4>
<div class="preview">
<pre><code>GET http://api.lelylan.com/subscriptions/:id</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>id</span>
        <span class="info">required</span>
      </td>
      <td>
        The ID of the desired subscription.
      </td>
    </tr>
  </tbody>
</table>

<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#get-a-subscription-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#get-a-subscription-node" data-toggle="tab" class="node">Node.js</a></li>
  <li><a href="#get-a-subscription-angular" data-toggle="tab" class="angular">AngularJS</a></li>
  <li><a href="#get-a-subscription-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="get-a-subscription-curl">
    <div class="preview">
    <pre><xmp>curl http://api.lelylan.com/subscriptions/<id> \
     -u <client-id>:<client-secret></xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-a-subscription-node">
    <div class="preview">
      <pre class="prettyprint"><xmp>var credentials = { clientID: '<client-id>', clientSecret: '<client-secret>' };
var Lelylan = require('lelylan-node')(credentials);

Lelylan.Subscription.find('<id>', callback);</xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-a-subscription-angular">
    <div class="preview">
      <pre class="prettyprint"><xmp><html ng-app="lelylan">
<body>
  <div ng-controller="LelylanController">{{subscription}}</div>
  <script>
    function LelylanController($scope, BasicAuth, Subscription) {
      var credentials = { clientID: '<client-id>', clientSecret: '<client-secret>' };
      BasicAuth.set(credentials);

      $scope.subscription = Subscription.get({ id: '<id>' });
    }
  </script>

  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-resource.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-cookies.min.js"></script>
  <script src="//s.lelylan.com/angularjs/0.1.0/lelylan.min.js"/></script>
</body>
</html></xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-a-subscription-ruby">
    <div class="preview">
      <pre class="prettyprint"><xmp>lelylan = Lelylan::Client.new(client_id: '<client-id>', client_secret: '<client-secret>')
subscription = lelylan.subscription('<id>')</xmp></pre>
    </div>
  </div>
</div>

<h4>Example header response</h4>

<div class="preview"><pre><code>HTTP/1.1 200 OK</code></pre></div>

<h4 id="subscription-representation">Example body response</h4>

<div class="preview highlight"><pre><code>{
  "uri": "http://api.lelylan.com/subscriptions/508acdffd033a9ea77000026",
  "id": "508acdffd033a9ea77000026",
  "client": { "uri": "http://people.lelylan.com/oauth/applications/508acdffd033a9ea77025" },
  "resource": "devices",
  "event": "property-update",
  "callback_uri": "http://callback.com/lelylan",
  "created_at": "2012-10-26T17:53:03Z",
  "updated_at": "2012-10-26T17:53:03Z"
}</code></pre>
</div>

<h4>Body Response explained</h4>

<dl>
  <dd><span>uri</span> - Subscription URI.</dd>
  <dd><span>id</span> - Subscription ID.</dd>
  <dd><span>client.uri</span> - Client application URI.</dd>
  <dd><span>resource</span> - Notified resource. See <a href="#subscriptions">available resources</a>.</dd>
  <dd><span>event</span> - Notified event. See <a href="#subscriptions">available events</a>.</dd>
  <dd><span>callback_uri</span> - Callback URI receiving the real-time updates.</dd>
</dl>

</article>

<br>

<article>

<h2 class="call"><a name="get-all-subscriptions">GET /subscriptions</a></h2>

<p>Returns a list of all subscriptions related to a client.</p>

<h4>Resource URL</h4>
<div class="preview">
<pre><code>GET http://api.lelylan.com/subscriptions</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>resource</span>
        <span class="info">optional</span>
      </td>
      <td>
        Resource name to search. See <a href="#subscriptions">available resources</a>
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>event</span>
        <span class="info">optional</span>
      </td>
      <td>
        Event name to search. See <a href="#subscriptions">available events</a>
      </td>
    </tr>
  </tbody>
</table>

<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#get-all-subscriptions-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#get-all-subscriptions-node" data-toggle="tab" class="node">Node.js</a></li>
  <li><a href="#get-all-subscriptions-angular" data-toggle="tab" class="angular">AngularJS</a></li>
  <li><a href="#get-all-subscriptions-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="get-all-subscriptions-curl">
    <div class="preview"><pre><xmp>curl http://api.lelylan.com/subscriptions \
     -u <client-id>:<client-secret></xmp></pre></xmp></pre></div>
  </div>
  <div class="tab-pane" id="get-all-subscriptions-node">
    <div class="preview">
      <pre class="prettyprint"><xmp>var credentials = { clientID: '<client-id>', clientSecret: '<client-secret>' };
var Lelylan = require('lelylan-node')(credentials);

Lelylan.Subscription.all({}, callback);</xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-all-subscriptions-angular">
    <div class="preview">
      <pre class="prettyprint"><xmp><html ng-app="lelylan">
<body>
  <div ng-controller="LelylanController">
    <div ng-repeat="subscription in subscriptions">{{subscription}}</div>
  </div>
  <script>
    function LelylanController($scope, BasicAuth, Subscription) {
      var credentials = { clientID: '<client-id>', clientSecret: '<client-secret>' };
      BasicAuth.set(credentials);

      $scope.subscriptions = Subscription.query();
    }
  </script>

  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-resource.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-cookies.min.js"></script>
  <script src="//s.lelylan.com/angularjs/0.1.0/lelylan.min.js"/></script>
</body>
</html></xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-all-subscriptions-ruby">
    <div class="preview">
      <pre class="prettyprint"><xmp>lelylan = Lelylan::Client.new(client_id: '<client-id>', client_secret: '<client-secret>')
subscriptions = lelylan.subscriptions</xmp></pre>
    </div>
  </div>
</div>

<h4>Example header response</h4>

<div class="preview"><pre><code>HTTP/1.1 200 OK</code></pre></div>

<h4>Example body response</h4>

<div class="preview highlight"><pre><code>[
  { # subscription representation },
  { # subscription representation },
  ...
]</code></pre></div>

<p>
See <a href="#subscription-representation">subscription representation</a> for body response.
</p>

</article>

<br/>

<article>

<h2 class="call"><a name="create-a-subscription">POST /subscriptions</a></h2>

<p>
Create a subscription and returns extended information for it.
</p>

<h4>Resource URL</h4>
<div class="preview">
<pre><code>POST  http://api.lelylan.com/subscriptions</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>resource</span>
        <span class="info">required</span>
      </td>
      <td>
        Notified resource. See <a href="#subscriptions">available resources</a>.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>event</span>
        <span class="info">required</span>
      </td>
      <td>
        Notified event. See <a href="#subscriptions">available events</a>.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>callback_uri</span>
        <span class="info">required</span>
      </td>
      <td>
        Callback URI receiving the real-time updates.
      </td>
    </tr>
  </tbody>
</table>


<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#create-a-subscription-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#create-a-subscription-node" data-toggle="tab" class="node">Node.js</a></li>
  <li><a href="#create-a-subscription-angular" data-toggle="tab" class="angular">AngularJS</a></li>
  <li><a href="#create-a-subscription-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="create-a-subscription-curl">
    <div class="preview">
      <pre><xmp>curl -X POST http://api.lelylan.com/subscriptions \
    -u <client-id>:<client-secret> \
    -H 'Content-Type: application/json' \
    -d '{
          "resource": "<resource>",
          "event": "<event>",
          "callback_uri": "<callback-uri>"
        }'</xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="create-a-subscription-node">
    <div class="preview">
      <pre class="prettyprint"><xmp>var credentials = { clientID: '<client-id>', clientSecret: '<client-secret>' };
var Lelylan = require('lelylan-node')(credentials);

var params = {
  resource: '<resource>',
  event: '<event>',
  callback_uri: '<callback-uri>' };

Lelylan.Subscription.create(params, callback);</xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="create-a-subscription-angular">
    <div class="preview">
      <pre class="prettyprint"><xmp><html ng-app="lelylan">
<body>
  <div ng-controller="LelylanController">{{subscription}}</div>
  <script>
    function LelylanController($scope, BasicAuth, Subscription) {
      var credentials = { clientID: '<client-id>', clientSecret: '<client-secret>' };
      BasicAuth.set(credentials);

      var params = {
        resource: '<resource>',
        event: '<event>',
        callback_uri: '<callback-uri>' };

      $scope.subscription = new Subscription(params);
      $scope.subscription.$save();
    }
  </script>

  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-resource.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-cookies.min.js"></script>
  <script src="//s.lelylan.com/angularjs/0.1.0/lelylan.min.js"/></script>
</body>
</html></xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="create-a-subscription-ruby">
    <div class="preview">
      <pre class="prettyprint"><xmp>lelylan = Lelylan::Client.new(client_id: '<client-id>', client_secret: '<client-secret>')
params = {
  resource: '<resource>',
  event: '<event>',
  callback_uri: '<callback-uri>' }

subscription = lelylan.create_subscription(params)</xmp></pre>
    </div>
  </div>
</div>

<h4>Example header response</h4>

<div class="preview"><pre><code>HTTP/1.1 201 Created
Location: http://api.lelylan.com/subscriptions/508acdffd033a9ea77000026</code></pre></div>

<h4>Example body response</h4>

<p>
See <a href="#subscription-representation">subscription representation</a> for body response.
</p>

</article>

<br/>

<article>

<h2 class="call"><a name="update-a-subscription">PUT /subscriptions/:id</a></h2>

<p>
Update a subscription identified from its ID and returns extended information for it.
</p>

<h4>Resource URL</h4>
<div class="preview">
<pre><code>PUT  http://api.lelylan.com/subscriptions/:id</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>id</span>
        <span class="info">required</span>
      </td>
      <td>
        The ID of the desired subscriptions.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>resource</span>
        <span class="info">optional</span>
      </td>
      <td>
        Notified resource. See <a href="#subscriptions">available resources</a>.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>event</span>
        <span class="info">optional</span>
      </td>
      <td>
        Notified event. See <a href="#subscriptions">available events</a>.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>callback_uri</span>
        <span class="info">optional</span>
      </td>
      <td>
        Callback URI receiving the real-time updates.
      </td>
    </tr>
  </tbody>
</table>

<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#update-a-subscription-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#update-a-subscription-node" data-toggle="tab" class="node">Node.js</a></li>
  <li><a href="#update-a-subscription-angular" data-toggle="tab" class="angular">AngularJS</a></li>
  <li><a href="#update-a-subscription-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="update-a-subscription-curl">
    <pre><xmp>curl -X PUT http://api.lelylan.com/subscriptions/<id> \
     -u <client-id>:<client-secret> \
     -H 'Content-Type: application/json' \
     -d '{ "resource": "<resource>" }'</xmp></pre>
  </div>
  <div class="tab-pane" id="update-a-subscription-node">
    <div class="preview">
      <pre class="prettyprint"><xmp>var credentials = { clientID: '<client-id>', clientSecret: '<client-secret>' };
var Lelylan = require('lelylan-node')(credentials);
var params = { resource: 'devices' };

Lelylan.Subscription.update('<id>', params, callback);</xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="update-a-subscription-angular">
    <div class="preview">
      <pre class="prettyprint"><xmp><html ng-app="lelylan">
<body>
  <div ng-controller="LelylanController">{{subscription}}</div>
  <script>
    function LelylanController($scope, BasicAuth, Subscription) {
      var credentials = { clientID: '<client-id>', clientSecret: '<client-secret>' };
      BasicAuth.set(credentials);

      var params = { id: '<id>', resource: 'devices' };
      $scope.subscription = new Subscription(params)
      $scope.subscription.$update();
    }
  </script>

  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-resource.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-cookies.min.js"></script>
  <script src="//s.lelylan.com/angularjs/0.1.0/lelylan.min.js"/></script>
</body>
</html></xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="update-a-subscription-ruby">
    <div class="preview">
      <pre class="prettyprint"><xmp>lelylan = Lelylan::Client.new(client_id: '<client-id>', client_secret: '<client-secret>')
params = { resource: 'devices' }

subscription = lelylan.update_subscription('<id>', params)</xmp></pre>
    </div>
  </div>
</div>

<h4>Example header response</h4>

<div class="preview"><pre><code>HTTP/1.1 200 OK</code></pre></div>

<h4>Example body response</h4>

<p>
See <a href="#subscription-representation">subscription representation</a> for body response.
</p>

</article>

<br/>

<article>

<h2 class="call"><a name="delete-a-subscription">DELETE /subscriptions/:id</a></h2>

<p>
Delete a subscription identified from its ID and returns extended information for it.</br>
</p>

<h4>Resource URL</h4>
<div class="preview">
<pre><code>DELETE  http://api.lelylan.com/subscriptions/:id</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>id</span>
        <span class="info">required</span>
      </td>
      <td>
        The ID of the desired subscription.
      </td>
    </tr>
  </tbody>
</table>

<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#delete-a-subscription-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#delete-a-subscription-node" data-toggle="tab" class="node">Node.js</a></li>
  <li><a href="#delete-a-subscription-angular" data-toggle="tab" class="angular">AngularJS</a></li>
  <li><a href="#delete-a-subscription-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="delete-a-subscription-curl">
    <div class="preview">
      <pre><xmp>var credentials = { clientID: '<client-id>', clientSecret: '<client-secret>' };
     -u <client-id>:<client-secret> \
     -H 'Content-Length: 0'</xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="delete-a-subscription-node">
    <div class="preview">
      <pre class="prettyprint"><xmp>var credentials = { clientID: '<client-id>', clientSecret: '<client-secret>' };
var Lelylan = require('lelylan-node')(credentials);

Lelylan.Subscription.delete('<id>', callback);</xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="delete-a-subscription-angular">
    <div class="preview">
      <pre class="prettyprint"><xmp><html ng-app="lelylan">
<body>
  <div ng-controller="LelylanController">{{subscription}}</div>
  <script>
    function LelylanController($scope, BasicAuth, Subscription) {
      var credentials = { clientID: '<client-id>', clientSecret: '<client-secret>' };
      BasicAuth.set(credentials);

      $scope.subscription = new Subscription({ id: '<id>' })
      $scope.subscription.$delete();
    }
  </script>

  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-resource.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.1.4/angular-cookies.min.js"></script>
  <script src="//s.lelylan.com/angularjs/0.1.0/lelylan.min.js"/></script>
</body>
</html></xmp></pre>
    </div>
  </div>
  <div class="tab-pane" id="delete-a-subscription-ruby">
    <div class="preview">
      <pre class="prettyprint"><xmp>lelylan = Lelylan::Client.new(client_id: '<client-id>', client_secret: '<client-secret>')
subscription = lelylan.delete_subscription('<id>')</xmp></pre>
    </div>
  </div>
</div>

<h4>Example header response</h4>

<div class="preview"><pre><code>HTTP/1.1 200 OK</code></pre></div>

<h4>Example body response</h4>

<p>
See <a href="#subscription-representation">subscription representation</a> for body response.
</p>

</article>
