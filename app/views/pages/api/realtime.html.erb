<article>

<aside class="menu">
</br>
<table>
  <tbody>
    <tr><td>&raquo; <a href="#realtime">Real-time</a></td></tr>
    <tr><td>&raquo; <a href="#how-to-subscribe">How to subscribe</a></td></tr>
    <%#<tr><td class="inside">&raquo; <a href="#register">Register a client</a></td></tr>%>
    <%#<tr><td class="inside">&raquo; <a href="#callback">Create a callback URL</a></td></tr>%>
    <%#<tr><td class="inside">&raquo; <a href="#subscriptions">Subscriptions</a></td></tr>%>
    <%#<tr><td class="inside">&raquo; <a href="#how-to-create-a-subscription">How to create a subscription</a></td></tr>%>
    <tr><td>&raquo; <a href="#receiving-updates">Receiving updates</a></td></tr>
    <tr><td>&raquo; <a href="#security">Security check</a></td></tr>
    <tr><td>&raquo; <a href="#subscriptions-api">Subscriptions API</a></td></tr>
    <tr><td class="inside">&raquo; <a href="#get-a-subscription">Get a subscription</a></td></tr>
    <tr><td class="inside">&raquo; <a href="#get-all-subscriptions">Get client subscriptions</a></td></tr>
    <tr><td class="inside">&raquo; <a href="#create-a-subscription">Create a subscription</a></td></tr>
    <tr><td class="inside">&raquo; <a href="#update-a-subscription">Update a subscription</a></td></tr>
    <tr><td class="inside">&raquo; <a href="#delete-a-subscription">Delete a subscription</a></td></tr>
  </tbody>
</table>
</aside>

<h1 class="call"><a name="realtime"><%= title %></a></h1>

<p>
Real-time Lelylan updates provide your application with instant notifications of
what happens to Lelylan and the physical world. The most interesting way to view the world
is live, as it happens. Through the use of a couple simple web hooks, we've been able to create
a system where your application gets notified of changes as they happen.
</p>

<p>
Our real-time API serves a couple of basic needs. First, instead of polling the Lelylan servers
to check to see what's happening, we POST to your servers new data when available. Second,
developers running servers like Node.js can provide real-time experiences of events to their users.
We're most excited to see what developers will create with live data at their fingertips.
</p>

</article>

</br>

<article>

<h1 class="call"><a name="how-to-subscribe">How to subscribe</a></h1>

<p>
Using the subscription services you can get real-time updates by subscribing to one (or more)
<strong>resource</strong> and to one (or more) related <strong>event</strong>.
</p>

<h3 class="call"><a name="register">Register a client</a></h3>

<p>
To create a subscription, you must first register a
<%= link_to 'client', "#{people_host}/oauth/applications" %>
to obtain a client_id and client_secret.
</p>

<h3 class="call"><a name="callback">Create a callback URL</a></h3>

<p>
When we have new updates to send your server. This callback URL must support POST methods so
that when we have new data we'll POST this data to your callback.
</p>

<h3 class="call"><a name="subscriptions">Subscriptions</a></h3>

<p>
The following table describes the available resources and events you can subscribe at.
</p>

<table class="zebra-striped lowcase">
  <thead>
    <tr>
      <th style="width: 110px;">RESOURCE</th>
      <th style="width: 150px;">EVENT</th>
      <th>DESCRIPTION</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>
        <code>devices</code>
      </td>
      <td>
        <code>property-updated</code>
      </td>
      <td>
        Receive notifications when a device changes its properties by interacting with the physical
        device, executing a <a href="/api/devices#execute-a-function">funcion</a>
        or changing its <a href="/api/devices#update-properties">properties</a>. Use this event
        to get realtime feedback about your device status.
      </td>
    </tr>
    <tr>
      <td>
        <code>devices</code>
      </td>
      <td>
        <code>consumption-created</code>
      </td>
      <td>
        Receive notifications when a <a href="/api/devices/consumptions">device consumption</a>
        is created. Use this event to track energy consumption of your devices.
      </td>
    </tr>
    <tr>
      <td>
        <code>devices</code>
      </td>
      <td>
        <code>created</code>
      </td>
      <td>
        Receive a notification when a <a href="/api/devices#create-a-device">device is created</a>.
      </td>
    </tr>
    <tr>
      <td>
        <code>devices</code>
      </td>
      <td>
        <code>updated</code>
      </td>
      <td>
        Receive a notification when a <a href="/api/devices#update-a-device">device is update</a>.
      </td>
    </tr>
    <tr>
      <td>
        <code>devices</code>
      </td>
      <td>
        <code>deleted</code>
      </td>
      <td>
        Receive a notification when a <a href="/api/devices#delete-a-device">device is deleted</a>.
      </td>
    </tr>
    <tr>
      <td>
        <code>types</code>
      </td>
      <td>
        <code>created</code>
      </td>
      <td>
        Receive a notification when a <a href="/api/types#create-a-type">type is created</a>.
      </td>
    </tr>
    <tr>
      <td>
        <code>types</code>
      </td>
      <td>
        <code>updated</code>
      </td>
      <td>
        Receive a notification when a <a href="/api/types#update-a-type">type is update</a>.
      </td>
    </tr>
    <tr>
      <td>
        <code>types</code>
      </td>
      <td>
        <code>deleted</code>
      </td>
      <td>
        Receive a notification when a <a href="/api/types#delete-a-types">location is deleted</a>.
      </td>
    </tr>
    <tr>
      <td>
        <code>locations</code>
      </td>
      <td>
        <code>created</code>
      </td>
      <td>
        Receive a notification when a <a href="/api/locations#create-a-location">location is created</a>.
      </td>
    </tr>
    <tr>
      <td>
        <code>locations</code>
      </td>
      <td>
        <code>updated</code>
      </td>
      <td>
        Receive a notification when a <a href="/api/locations#update-a-location">location is update</a>.
      </td>
    </tr>
    <tr>
      <td>
        <code>locations</code>
      </td>
      <td>
        <code>deleted</code>
      </td>
      <td>
        Receive a notification when a <a href="/api/locations#delete-a-location">location is deleted</a>.
      </td>
    </tr>
  </tbody>
</table>

<h3 class="call"><a name="how-to-create-a-subscription">How to create a subscription</a></h3>

<p>
  To create a subscription make a POST request to the subscriptions endpoint setting the
  <code>resource</code> and <code>event</code> you want notifications for. Here an example
  where we subscribe to all devices status updates. Check out the
  <a href="#subscriptions-api">subscriptions API</a> for more information.
</p>

<ul class="nav nav-tabs">
  <li class="active"><a href="#get-a-subscription-example-curl" data-toggle="tab" class="curl">Curl</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="create-a-subscription-example-curl">
    <div class="preview">
      <pre><code class="no-highlight">curl -X POST http://api.lelylan.com/subscriptions \
     -u &lt;client_id&gt;:&lt;client_secret&gt; \
     -H 'Content-Type: application/json' \
     -d '{
          "resource": "device",
          "event": "property-updated",
          "callback_uri": "http://callback.com/lelylan"
        }'</code></pre>
    </div>
  </div>
</div>

<p>
<span class="label notice">Notice</span>
Subscriptions are always referred to a specific
<%= link_to 'client', "#{people_host}/oauth/applications" %>.
To make the request work, basic authenticate your request using the application
client ID and the client secret.
</p>

</article>

</br>

<article>

<h1 class="call"><a name="receiving-updates">Receiving updates</a></h1>

<p>
When someone, for example, update a device property firing an event related to your subscriptions,
a POST request is sent to the callback URL defined in the subscription. The post body contains
a JSON representation with the following fields.
</p>

<h4 id="payload-representation">Payload example</h4>

<div class="preview"><pre><code>{
  "id": "5042344b95ac441000000013",
  "resource": "devices",
  "event": "property-updated",
  "data": {
    "uri": "http://api.lelylan.com/devices/5042344b95fc441000000001",
    "id": "5042344b95fc441000000001",
    "name": "Closet dimmer",
    "type": { "uri": "http://api.lelylan.com/types/5042310470eda60a0000000d" },
    "pending": false,
    "created_at": "2012-09-01T16:00:32Z",
    "updated_at": "2012-09-01T16:00:32Z",
    "properties": [{
      "uri": "http://api.lelylan.com/properties/50420c7e267ff51000000001",
      "id": "50420c7e267ff51000000001",
      "value": "on",
      "physical": "on" }],
    "physical": {
      "uri": "http://mqtt.lelylan.com/physicals/5042205c70eda61000000003"
    }
  }
}</code></pre></div>

<h4>Payload explained</h4>

<dl>
  <dd><span>id</span> - Notified event unique ID.</dd>
  <dd><span>resource</span> - Notified resource. See <a href="#subscriptions">available resources</a>.</dd>
  <dd><span>event</span> - Notified event. See <a href="#subscriptions">available events</a>.</dd>
  <dd><span>data</span> - Notified resource representation.
  This representation is consistent with Lelylan
  <a href="/api/devices#device-representation">device representation</a>,
  <a href="/api/types#type-representation">type representation</a> and
  <a href="/api/locations#location-representation">location representation</a>.
  </dd>
</dl>

<h4>Callback response</h4>

<p>
  You should respond with a 2xx HTTP status when the callback URL is called. If a different
  HTTP status is received, Lelylan will try to send the payload 10 times with an exponantially
  growing delay between the requests (1 sec, 3 secs, 9, secs, 27 secs, ..., 16 hours). After
  the 10th failed attempt the event is set as processed.
</p>

</article>

</br>

<article>

<h1 class="call"><a name="security">Security check</a></h1>

<p>
To verify that the payload you received comes from us, you can verify the "X-Hub-Signature"
header. This will be a SHA-1-signed hexadecimal digest, using your client secret as a key
and the payload as the message. Here an example in Ruby.
</p>

<ul class="nav nav-tabs">
  <li class="active"><a href="#verify-payload-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="verify-payload-ruby">
    <div class="preview">
      <pre><code>require 'openssl'

client_secret = CLIENT_SECRET
signature     = request.headers['X-Hub-Signature']
payload       = request.body

digest = OpenSSL::Digest::Digest.new('sha1')
verify_signature = OpenSSL::HMAC.hexdigest(digest, client_secret, payload)

raise InvalidSignature, "Invalid X-Hub-Signature" if signature != verify_signature</code></pre>
    </div>
  </div>
</div>

<p>
  <span class="label notice">Notice</span>
  One important note is related to the OAuth 2 authorization system. As we do not want to notify
  events for resources not authorized from the user to third party applications we first check
  for the authorized resources and then (eventually) fire the notification.
</p>

</article>

</br></br>

<article>

<h1 class="call"><a name="subscriptions-api">Subscriptions API</a></h1>

</article>

<article>

<h2 class="call"><a name="get-a-subscription">GET /subscriptions/:id</a></h2>

<p>
  Returns extended information for a given subscription identified from its ID.
</p>

<h4>Resource URL</h4>
<div class="preview">
<pre><code class="no-highlight">GET http://api.lelylan.com/subscriptions/:id</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>id</span>
        <span class="info">required</span>
      </td>
      <td>
        The ID of the desired subscription.
      </td>
    </tr>
  </tbody>
</table>

<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#get-a-subscription-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#get-a-subscription-javascript" data-toggle="tab" class="javascript">Javascript</a></li>
  <li><a href="#get-a-subscription-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="get-a-subscription-curl">
    <div class="preview">
    <pre><code class="no-highlight">curl http://api.lelylan.com/subscriptions/50427cef14a0d61200000001 \
     -u &lt;client_id&gt;:&lt;client_secret&gt;</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-a-subscription-javascript">
    <div class="preview">
      <pre><code># todo</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-a-subscription-ruby">
    <div class="preview">
      <pre><code># todo</code></pre>
    </div>
  </div>
</div>

<h4>Example header response</h4>

<div class="preview"><pre><code class="no-highlight">HTTP/1.1 200 OK</code></pre></div>

<h4 id="subscription-representation">Example body response</h4>

<div class="preview highlight"><pre><code>{
  "uri": "http://api.lelylan.com/subscriptions/508acdffd033a9ea77000026",
  "id": "508acdffd033a9ea77000026",
  "client": { "uri": "http://people.lelylan.com/oauth/applications/508acdffd033a9ea77025" },
  "resource": "devices",
  "event": "property-updated",
  "callback_uri": "http://callback.com/lelylan",
  "created_at": "2012-10-26T17:53:03Z",
  "updated_at": "2012-10-26T17:53:03Z"
}</code></pre>
</div>

<h4>Body Response explained</h4>

<dl>
  <dd><span>uri</span> - Subscription URI.</dd>
  <dd><span>id</span> - Subscription ID.</dd>
  <dd><span>client.uri</span> - Client application URI.</dd>
  <dd><span>resource</span> - Notified resource. See <a href="#subscriptions">available resources</a>.</dd>
  <dd><span>event</span> - Notified event. See <a href="#subscriptions">available events</a>.</dd>
  <dd><span>callback_uri</span> - Callback URI receiving the real-time updates.</dd>
</dl>

</article>

<br>

<article>

<h2 class="call"><a name="get-all-subscriptions">GET /subscriptions</a></h2>

<p>Returns a list of all subscriptions related to a client.</p>

<h4>Resource URL</h4>
<div class="preview">
<pre><code class="no-highlight">GET http://api.lelylan.com/subscriptions</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>resource</span>
        <span class="info">optional</span>
      </td>
      <td>
        Resource name to search. See <a href="#subscriptions">available resources</a>
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>event</span>
        <span class="info">optional</span>
      </td>
      <td>
        Event name to search. See <a href="#subscriptions">available events</a>
      </td>
    </tr>
  </tbody>
</table>

<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#get-all-subscriptions-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#get-all-subscriptions-javascript" data-toggle="tab" class="javascript">Javascript</a></li>
  <li><a href="#get-all-subscriptions-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="get-all-subscriptions-curl">
    <div class="preview"><pre><code class="no-highlight">curl http://api.lelylan.com/subscriptions \
     -u &lt;client_id&gt;:&lt;client_secret&gt;</code></pre></code></pre></div>
  </div>
  <div class="tab-pane" id="get-all-subscriptions-javascript">
    <div class="preview">
      <pre><code># todo</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-all-subscriptions-ruby">
    <div class="preview">
      <pre><code># todo</code></pre>
    </div>
  </div>
</div>

<h4>Example header response</h4>

<div class="preview"><pre><code class="no-highlight">HTTP/1.1 200 OK</code></pre></div>

<h4>Example body response</h4>

<div class="preview highlight"><pre><code class="no-highlight">[
  { # subscription representation },
  { # subscription representation },
  ...
]</code></pre></div>

<p>
See <a href="#subscription-representation">subscription representation</a> for body response.
</p>
</article>

<br/>

<article>

<h2 class="call"><a name="create-a-subscription">POST /subscriptions</a></h2>

<p>
Create a subscription and returns extended information for it.
</p>

<h4>Resource URL</h4>
<div class="preview">
<pre><code class="no-highlight">POST  http://api.lelylan.com/subscriptions</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>resource</span>
        <span class="info">required</span>
      </td>
      <td>
        Notified resource. See <a href="#subscriptions">available resources</a>.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>event</span>
        <span class="info">required</span>
      </td>
      <td>
        Notified event. See <a href="#subscriptions">available events</a>.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>callback_uri</span>
        <span class="info">required</span>
      </td>
      <td>
        Callback URI receiving the real-time updates.
      </td>
    </tr>
  </tbody>
</table>


<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#create-a-subscription-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#create-a-subscription-javascript" data-toggle="tab" class="javascript">Javascript</a></li>
  <li><a href="#create-a-subscription-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="create-a-subscription-curl">
    <div class="preview">
      <pre><code class="no-highlight">curl -X POST http://api.lelylan.com/subscriptions \
    -u &lt;client_id&gt;:&lt;client_secret&gt; \
    -H 'Content-Type: application/json' \
    -d '{
          "resource": "devices",
          "event": "property-updated",
          "callback_uri": "http://callback.com/lelylan"
        }'</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="create-a-subscription-javascript">
    <div class="preview">
      <pre><code># todo</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="create-a-subscription-ruby">
    <div class="preview">
      <pre><code># todo</code></pre>
    </div>
  </div>
</div>

<h4>Example header response</h4>

<div class="preview"><pre><code class="no-highlight">HTTP/1.1 201 Created
Location: http://api.lelylan.com/subscriptions/508acdffd033a9ea77000026</code></pre></div>

<h4>Example body response</h4>

<p>
See <a href="#subscription-representation">subscription representation</a> for body response.
</p>

</article>

<br/>

<article>

<h2 class="call"><a name="update-a-subscription">PUT /subscriptions/:id</a></h2>

<p>
Update a subscription identified from its ID and returns extended information for it.
</p>

<h4>Resource URL</h4>
<div class="preview">
<pre><code class="no-highlight">PUT  http://api.lelylan.com/subscriptions/:id</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>id</span>
        <span class="info">required</span>
      </td>
      <td>
        The ID of the desired subscriptions.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>resource</span>
        <span class="info">optional</span>
      </td>
      <td>
        Notified resource. See <a href="#subscriptions">available resources</a>.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>event</span>
        <span class="info">optional</span>
      </td>
      <td>
        Notified event. See <a href="#subscriptions">available events</a>.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>callback_uri</span>
        <span class="info">optional</span>
      </td>
      <td>
        Callback URI receiving the real-time updates.
      </td>
    </tr>
  </tbody>
</table>

<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#update-a-subscription-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#update-a-subscription-javascript" data-toggle="tab" class="javascript">Javascript</a></li>
  <li><a href="#update-a-subscription-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="update-a-subscription-curl">
    <pre><code class="no-highlight">curl -X PUT http://api.lelylan.com/subscriptions/50427d5914a0d60a00000001 \
     -u &lt;client_id&gt;:&lt;client_secret&gt; \
     -H 'Content-Type: application/json' \
     -d '{
          "resource": "locations",
          "event": "created"
         }'</code></pre>
  </div>
  <div class="tab-pane" id="update-a-subscription-javascript">
    <div class="preview">
      <pre><code># todo</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="update-a-subscription-ruby">
    <div class="preview">
      <pre><code># todo</code></pre>
    </div>
  </div>
</div>

<h4>Example header response</h4>

<div class="preview"><pre><code class="no-highlight">HTTP/1.1 200 OK</code></pre></div>

<h4>Example body response</h4>

<p>
See <a href="#subscription-representation">subscription representation</a> for body response.
</p>

</article>

<br/>

<article>

<h2 class="call"><a name="delete-a-subscription">DELETE /subscriptions/:id</a></h2>

<p>
Delete a subscription identified from its ID and returns extended information for it.</br>
</p>

<h4>Resource URL</h4>
<div class="preview">
<pre><code class="no-highlight">DELETE  http://api.lelylan.com/subscriptions/:id</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>id</span>
        <span class="info">required</span>
      </td>
      <td>
        The ID of the desired subscription.
      </td>
    </tr>
  </tbody>
</table>

<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#delete-a-subscription-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#delete-a-subscription-javascript" data-toggle="tab" class="javascript">Javascript</a></li>
  <li><a href="#delete-a-subscription-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="delete-a-subscription-curl">
    <div class="preview"><pre><code class="no-highlight">curl -X DELETE http://api.lelylan.com/subscriptions/50427d5914a0d60a00000001 \
     -u &lt;client_id&gt;:&lt;client_secret&gt; \
     -H 'Content-Length: 0'</code></pre>
  </div>
</div>
<div class="tab-pane" id="delete-a-subscription-javascript">
  <div class="preview">
      <pre><code># todo</code></pre>
  </div>
</div>
<div class="tab-pane" id="delete-a-subscription-ruby">
  <div class="preview">
      <pre><code># todo</code></pre>
  </div>
</div>
</div>

<h4>Example header response</h4>

<div class="preview"><pre><code class="no-highlight">HTTP/1.1 200 OK</code></pre></div>

<h4>Example body response</h4>

<p>
See <a href="#subscription-representation">subscription representation</a> for body response.
</p>

</article>
