<article>

<aside class="menu">
</br>
<table>
  <tbody>
    <tr><td><a href="" class="upcase"><%= title %></a></td></tr>
    <tr><td>&raquo; <a href="#get-a-type">Get a type</a></td></tr>
    <tr><td>&raquo; <a href="#get-all-types">Get all types</a></td></tr>
    <tr><td>&raquo; <a href="#create-a-type">Create a type</a></td></tr>
    <tr><td>&raquo; <a href="#update-a-type">Update a type</a></td></tr>
    <tr><td>&raquo; <a href="#delete-a-type">Delete a type</a></td></tr>
  </tbody>
</table>
</aside>

<h1 class="call"><a name="types"><%= title %></a></h1>

<p>
A type describes the structure of a device.
In its simplest form every type can be defined as the combination of three key elements.

</p>

<ul>
  <li><a href="/api/types/properties/">Properties</a>: what vary during time.</li>
  <li><a href="/api/types/functions/">Functions</a>: what a device can do.</li>
  <li><a href="/api/types/statuses/">Statuses</a>: what a device is in a specific time of its life.</li>
</ul>

<br/>

<p>
Here an example describing a simplified dimmer type.
</p>

<table>
  <tbody>
    <tr><td><strong>Properties</strong></td><td>stauts, intensity</td></tr>
    <tr><td><strong>Functions</strong></td><td>turn on, turn off, set intensity</td></tr>
    <tr><td><strong>Statuses</strong></td><td>On, Off, low intensity, high intensity</td></tr>
  </tbody>
</table>

<p>
It can be a little tricky to get started with types. When you first see its
json structure it appears to be quite complex. If this is the case first read the
<a href="/api/types/properties/">properties</a>,
<a href="/api/types/functions/">functions</a> and
<a href="/api/types/statuses/">statuses</a> docs.
</p>

<br/>

<h3 class="call"><a name="available-types">Available Types</a></h3>

<p>
<span class="label warning">Temporary</span>
When creating a device you'll need to choose a type from which the device inherits
its properties. We are creating a list of preset types and of course you can create
your own, but for simple prototypes we suggest you to use the following basic light.
</p>

<table>
  <tbody>
    <tr><td><strong>Description</strong></td><td>Basic Light</td></tr>
    <tr><td><strong>URI</strong></td><td>http://api.lelylan.com/types/50ffa785a90db269f2000002</td></tr>
    <tr><td><strong>Properties</strong></td><td>status</td></tr>
    <tr><td><strong>Functions</strong></td><td>turn on, turn off</td></tr>
  </tbody>
</table>


</article>

<br>

<article>

<h1 class="call"><a name="get-a-type">GET /types/:id</a></h1>

<p>

Returns extended information for a given <a href="/api/core/#public-resources">public</a>
type identified from its ID.
</p>

<h4>Resource URL</h4>
<div class="preview">
  <pre><code class="no-highlight">GET http://api.lelylan.com/types/:id</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>id</span>
        <span class="info">required</span>
      </td>
      <td>
        The ID of the desired type.
      </td>
    </tr>
  </tbody>
</table>

<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#get-a-type-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#get-a-type-node" data-toggle="tab" class="node">Node.js</a></li>
  <li><a href="#get-a-type-javascript" data-toggle="tab" class="javascript">Javascript</a></li>
  <li><a href="#get-a-type-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="get-a-type-curl">
    <div class="preview">
        <pre><code class="no-highlight">curl http://api.lelylan.com/types/&lt;id&gt;</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-a-type-node">
    <div class="preview">
      <pre><code class="javascript">var Lelylan = require('lelylan-node')();
Lelylan.Type.find('id', callback);</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-a-type-js">
    <div class="preview">
        <pre><code># todo</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-a-type-ruby">
    <div class="preview">
        <pre><code class="ruby">lelylan = Lelylan::Client.new
type = lelylan.type('&lt;id&gt;')</code></pre>
    </div>
  </div>
</div>

<h4>Example header response</h4>

  <div class="preview"><pre><code class="no-highlight">HTTP/1.1 200 OK</code></pre></div>

<h4 id="type-representation">Example body response</h4>

<div class="preview highlight"><pre><code>{
  "uri": "http://api.lelylan.com/types/5042234270eda61200000006",
  "id": "5042234270eda61200000006",
  "name": "Dimmer",
  "created_at": "2012-09-01T15:01:22Z",
  "updated_at": "2012-09-01T15:01:22Z",
  "properties": [{
    "uri": "http://api.lelylan.com/properties/50420c3a267ff51300000001",
    "id": "50420c3a267ff51300000001",
    "name": "Intensity",
    "suggested": {"0": "Min", "25": "Low", "50": "Half", "75": "High", "100": "Max"},
    "default": "0",
  }, {
    "uri": "http://api.lelylan.com/properties/50420c7e267ff51000000001",
    "id": "50420c7e267ff51000000001",
    "name": "Status",
    "suggested": {"on": "On", "off": "Off"},
    "default": "off",
  }],
  "functions": [{
    "uri": "http://api.lelylan.com/functions/5042205c70eda61000000003",
    "id": "5042205c70eda61000000003",
    "name": "Set intensity",
    "properties": [{
      "uri": "http://api.lelylan.com/properties/50420c7e267ff51000000001",
      "value": "on"
    }, {
      "uri": "http://api.lelylan.com/properties/50420c3a267ff51300000001",
      "value": "{{100}}"
    }]
  }, {
    "uri": "http://api.lelylan.com/functions/5042209370eda61000000005",
    "id": "5042209370eda61000000005",
    "name": "Turn on",
    "properties": [{
      "uri": "http://api.lelylan.com/properties/50420c7e267ff51000000001",
      "value": "on"
    }]
  }, {
    "uri": "http://api.lelylan.com/functions/504220c470eda60d00000004",
    "id": "504220c470eda60d00000004",
    "name": "Turn off",
    "properties": [{
      "uri": "http://api.lelylan.com/properties/50420c7e267ff51000000001",
      "value": "off"
    }]
  }],
  "statuses": [{
    "uri": "http://api.lelylan.com/statuses/50421dbd70eda60a0000000b",
    "id": "50421dbd70eda60a0000000b",
    "name": "Setting intensity",
    "properties": [{
      "uri": "http://api.lelylan.com/properties/50420c7e267ff51000000001",
      "values": ["on"],
      "pending": false
    }, {
      "uri": "http://api.lelylan.com/properties/50420c3a267ff51300000001",
      "values": ["1..100"],
      "pending": true
    }]
  }]
}</code></pre></div>

<h4>Body Response explained</h4>

<dl>
  <dd><span>id</span> - Type ID.</dd>
  <dd><span>uri</span> - Type URI.</dd>
  <dd><span>name</span> - Type name.</dd>
  <dd><span>properties</span> - Type properties.
  <a href="/api/types/properties/">Learn more about</a>.</dd>
  <dd><span>functions</span> - Type functions.
  <a href="/api/types/functions/">Learn more about</a>.</dd>
  <dd><span>statuses</span> - Type statuses.
  <a href="/api/types/statuses/">Learn more about</a>.</dd>
</dl>

</article>

<br>

<article>

<h1 class="call"><a name="get-all-types">GET /types</a></h1>

<p>Returns a list of owned (and <a href="/api/core/#public-resources">public</a>) types.</p>

<h4>Resource URL</h4>
<div class="preview">
<pre><code class="no-highlight"># owned types
GET http://api.lelylan.com/types</code><code class="no-highlight"># all types
GET http://api.lelylan.com/types/public</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>name</span>
        <span class="info">optional</span>
      </td>
      <td>
        Type name to search.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>start</span>
        <span class="info">optional</span>
      </td>
      <td>
        URI of the last fetched record. Learn more about <a href="/api/core/#pagination">pagination</a>.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>per</span>
        <span class="info">optional</span>
        <span class="info">default to '25'</span>
      </td>
      <td>
        Number of resources per page.
      </td>
    </tr>
  </tbody>
</table>

<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#get-all-types-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#get-all-types-node" data-toggle="tab" class="node"> Node.js</a></li>
  <li><a href="#get-all-types-javascript" data-toggle="tab" class="javascript">Javascript</a></li>
  <li><a href="#get-all-types-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="get-all-types-curl">
    <div class="preview"><pre><code class="no-highlight">curl http://api.lelylan.com/types \
     -H 'Authorization: Bearer &lt;token&gt;'</code></pre></div>
  </div>
  <div class="tab-pane" id="get-all-types-node">
    <div class="preview">
      <pre><code class="javascript">var Lelylan = require('lelylan-node')({ token: token });
Lelylan.Type.all({}, callback); // owned resources

var Lelylan = require('lelylan-node')();
Lelylan.Type.public({}, callback); // all existing resources</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-all-types-js">
    <div class="preview">
      <pre><code># todo</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="get-all-types-ruby">
    <div class="preview">
      <pre><code class="ruby">lelylan = Lelylan::Client.new(token: token)
types = lelylan.types # owned resources

lelylan = Lelylan::Client.new
types = lelylan.public_types # all existing resources</code></pre>
    </div>
  </div>
</div>

<h4>Example header response</h4>

<div class="preview"><pre><code class="no-highlight">HTTP/1.1 200 OK</code></pre></div>

<h4>Example body response</h4>

<div class="preview"><pre><code>[
  {
    "uri": "http://api.lelylan.com/types/5042223470eda60d00000005",
    "id": "5042223470eda60d00000005",
    "name": "Dimmer",
    "created_at": "2012-09-01T14:56:52Z",
    "updated_at": "2012-09-01T14:56:52Z"
  }, {
    "uri": "http://api.lelylan.com/types/5042229270eda61200000005",
    "id": "5042229270eda61200000005",
    "name": "Light",
    "created_at": "2012-09-01T14:58:26Z",
    "updated_at": "2012-09-01T14:58:26Z"
  }, ...
]</code></pre></div>

<p class="notice">
<span class="label">notice</span>
Due to the type complexity structure the type representation is a simplified version of
its <a href="#type-representation">standard representation</a>. Most of the time having
the name will be enough.
</p>

</article>

<br/>

<article>

<h1 class="call"><a name="create-a-type">POST /types</a></h1>

<p>
Create a type and returns extended information for it.
</p>

<h4>Resource URL</h4>
<div class="preview">
  <pre><code class="no-highlight">POST http://api.lelylan.com/types</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>name</span>
        <span class="info">required</span>
      </td>
      <td>
        Type name.
      </td>
    </tr>
  </tr>
  <tr>
    <td class="parameter">
      <span>properties</span>
      <span class="info">optional</span>
    </td>
    <td>
      List of property URIs.
      <a href="/api/types/properties/">Learn more about properties</a>.
    </td>
  </tr>
  <tr>
    <td class="parameter">
      <span>functions</span>
      <span class="info">optional</span>
    </td>
    <td>
      List of function URIs.
      <a href="/api/types/functions/">Learn more about functions</a>.
    </td>
  </tr>
  <tr>
    <td class="parameter">
      <span>statuses</span>
      <span class="info">optional</span>
    </td>
    <td>
      List of status URIs.
      <a href="/api/types/statuses/">Learn more about statuses</a>.
    </td>
  </tr>
</tbody>
        </table>

<h4>Example Request</h4>

<p class="notice">
<span class="label">Notice</span>
In this example the resource IDs are identified from friendly names.
</p>

<ul class="nav nav-tabs">
  <li class="active"><a href="#create-a-type-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#create-a-type-node" data-toggle="tab" class="node">Node.js</a></li>
  <li><a href="#create-a-type-javascript" data-toggle="tab" class="javascript">Javascript</a></li>
  <li><a href="#create-a-type-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="create-a-type-curl">
    <div class="preview">
      <pre><code class="no-highlight">curl -X POST http://api.lelylan.com/types \
     -H 'Authorization: Bearer &lt;token&gt;' \
     -H 'Content-Type: application/json' \
     -d '{
           "name": "Dimmer",
           "properties": [
             "http://api.lelylan.com/properties/&lt;status&gt;",
             "http://api.lelylan.com/properties/&lt;intensity&gt;"
           ],
           "functions": [
             "http://api.lelylan.com/functions/&lt;turn-on&gt;",
             "http://api.lelylan.com/functions/&lt;turn-off&gt;",
             "http://api.lelylan.com/functions/&lt;set-intensity&gt;"
           ],
           "statuses": [
             "http://api.lelylan.com/statuses/&lt;setting-intensity&gt;"
           ]
         }'</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="create-a-type-node">
    <div class="preview">
      <pre><code class="javascript">var Lelylan = require('lelylan-node')({ token: token });
var params = {
  'name': 'Dimmer',
  'properties':
    [ 'http://api.lelylan.com/properties/&lt;status&gt;',
      'http://api.lelylan.com/properties/&lt;intensity&gt;' ],
  'functions':
    [ 'http://api.lelylan.com/functions/&lt;turn-on&gt;',
      'http://api.lelylan.com/functions/&lt;turn-off&gt;',
      'http://api.lelylan.com/functions/&lt;set-intensity&gt;' ],
  'statuses':
    [ 'http://api.lelylan.com/statuses/&lt;setting-intensity&gt;' ] };

Lelylan.Type.create(params, callback);</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="create-a-type-javascript">
    <div class="preview">
      <pre><code># todo</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="create-a-type-ruby">
    <div class="preview">
      <pre><code class="ruby">lelylan = Lelylan::Client.new(token: token)
params = {
  name: 'Dimmer',
  properties:
    [ 'http://api.lelylan.com/properties/&lt;status&gt;',
      'http://api.lelylan.com/properties/&lt;intensity&gt;' ],
  functions:
    [ 'http://api.lelylan.com/functions/&lt;turn-on&gt;',
      'http://api.lelylan.com/functions/&lt;turn-off&gt;',
      'http://api.lelylan.com/functions/&lt;set-intensity&gt;' ],
  statuses:
    [ 'http://api.lelylan.com/statuses/&lt;setting-intensity&gt;' ] }

type = lelylan.create_type(params)</code></pre>
    </div>
  </div>
</div>

<h4>Example header response</h4>

<div class="preview"><pre><code class="no-highlight">HTTP/1.1 201 Created
Location: http://api.lelylan.com/types/5042234270eda61200000006</code></pre></div>

<h4>Example body response</h4>

<p>
  See <a href="#type-representation">type representation</a> for body response.
</p>

</article>

<br/>

<article>

<h1 class="call"><a name="update-a-type">PUT /types/:id</a></h1>

<p>
  Update a type identified from its ID and returns extended information for it.
</p>

<h4>Resource URL</h4>
<div class="preview">
<pre><code class="no-highlight">PUT  http://api.lelylan.com/types/:id</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>id</span>
        <span class="info">required</span>
      </td>
      <td>
        The ID of the desired type.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>name</span>
        <span class="info">optional</span>
      </td>
      <td>
        Type name.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>properties</span>
        <span class="info">optional</span>
      </td>
      <td>
        List of property URIs.
        <a href="/api/types/properties/">Learn more about properties</a>.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>functions</span>
        <span class="info">optional</span>
      </td>
      <td>
        List of function URIs.
        <a href="/api/types/functions/">Learn more about functions</a>.
      </td>
    </tr>
    <tr>
      <td class="parameter">
        <span>statuses</span>
        <span class="info">optional</span>
      </td>
      <td>
        List of status URIs.
        <a href="/api/types/statuses/">Learn more about statuses</a>.
      </td>
    </tr>
  </tbody>
</table>

<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#update-a-type-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li><a href="#update-a-type-node" data-toggle="tab" class="node">Node.js</a></li>
  <li><a href="#update-a-type-javascript" data-toggle="tab" class="javascript">Javascript</a></li>
  <li><a href="#update-a-type-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="update-a-type-curl">
    <div class="preview"><pre><code class="no-highlight">curl -X PUT http://api.lelylan.com/types/&lt;id&gt; \
     -H 'Authorization: Bearer &lt;token&gt;' \
     -H 'Content-Type: application/json' \
     -d '{ "name": "Dimmer RBG" }'</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="update-a-type-node">
    <div class="preview">
      <pre><code class="javascript">var Lelylan = require('lelylan-node')({ token: token });
var params = { 'name': 'Dimmer RBG' };
Lelylan.Type.update('id', params, callback);</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="update-a-type-javascript">
    <div class="preview">
      <pre><code># todo</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="update-a-type-ruby">
    <div class="preview">
      <pre><code class="ruby">lelylan = Lelylan::Client.new(token: token)
params = { name: 'Dimmer RBG' }
type = lelylan.update_type('&lt;id&gt;', params)</code></pre>
    </div>
  </div>
</div>

<p class="notice">
<span class="label">Notice</span>
When updating a type connection (properties, functions or statuses)
all previous connected resources are replaced.
</p>

<h4>Example header response</h4>

<div class="preview"><pre><code class="no-highlight">HTTP/1.1 200 OK</code></pre></div>

<h4>Example body response</h4>

<p>
  See <a href="#type-representation">type representation</a> for body response.
</p>

</article>

<br/>

<article>

<h1 class="call"><a name="delete-a-type">DELETE /types/:id</a></h1>

<p>
  Delete a type identified from its ID and returns extended information for it.
  All connected resources (properties, functions and statuses) are not deleted.
</p>

<h4>Resource URL</h4>
<div class="preview">
<pre><code class="no-highlight">DELETE http://api.lelylan.com/types/:id</code></pre>
</div>

<h4>Parameters</h4>

<table class="zebra-striped">
  <tbody>
    <tr>
      <td class="parameter">
        <span>id</span>
        <span class="info">required</span>
      </td>
      <td>
        The ID of the desired type.
      </td>
    </tr>
  </tbody>
</table>

<h4>Example Request</h4>

<ul class="nav nav-tabs">
  <li class="active"><a href="#delete-a-type-curl" data-toggle="tab" class="curl">Curl</a></li>
  <li class=""><a href="#delete-a-type-node" data-toggle="tab" class="node">Node.js</a></li>
  <li class=""><a href="#delete-a-type-javascript" data-toggle="tab" class="javascript">Javascript</a></li>
  <li class=""><a href="#delete-a-type-ruby" data-toggle="tab" class="ruby">Ruby</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="delete-a-type-curl">
    <div class="preview"><pre><code class="no-highlight">curl -X DELETE http://api.lelylan.com/types/&lt;id&gt; \
     -H 'Authorization: Bearer &lt;token&gt;' \
     -H 'Content-Length: 0'</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="delete-a-type-node">
    <div class="preview">
      <pre><code class="javascript">var Lelylan = require('lelylan-node')({ token: token });
Lelylan.Type.delete('id', callback);</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="delete-a-type-javascript">
    <div class="preview">
      <pre><code># todo</code></pre>
    </div>
  </div>
  <div class="tab-pane" id="delete-a-type-ruby">
    <div class="preview">
      <pre><code class="ruby">lelylan = Lelylan::Client.new(token: token)
type = lelylan.delete_type('&lt;id&gt;')</code></pre>
    </div>
  </div>
</div>

<h4>Example header response</h4>

<div class="preview"><pre><code class="no-highlight">HTTP/1.1 200 OK</code></pre></div>

<h4>Example body response</h4>

<p>
  See <a href="#type-representation">type representation</a> for body response.
</p>

</article>
